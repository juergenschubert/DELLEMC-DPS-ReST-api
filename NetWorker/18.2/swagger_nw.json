{
    "swagger": "2.0",
    "info": {
        "description": "The NetWorker REST API is available in the following base URI:<br>&nbsp;&nbsp;https://{nw-server-hostname}:9090/nwrestapi/v3<br><br>There is one URI group: {baseuri}/global<br>&nbsp;<br>To access client resources, you must use the URI group, followed by the associated tag. For example,<br>https://{nw-server-hostname}:9090/nwrestapi/v3/global/{id}<br>&nbsp;&nbsp;<br>The {id} corresponds to the Resource tag of the client.<br><br>",
        "version": "18.2.0",
        "title": "NetWorker REST API RESOURCE REFERENCE",
        "contact": {
            "name": "REST API TEAM"
        },
        "license": {
            "name": "Copyright Â© 1990-2018 Dell Inc. or its subsidiaries. All rights reserved.",
            "url": "https://www.dellemc.com"
        }
    },
    "basePath": "/nwrestapi/v3/global",
    "securityDefinitions": {
        "apiSecurity": {
            "type": "basic"
        }
    },
    "security": [
        {
            "apiSecurity": []
        }
    ],
    "tags": [
        {
            "name": "alerts"
        },
        {
            "name": "backups"
        },
        {
            "name": "clients"
        },
        {
            "name": "devices"
        },
        {
            "name": "directives"
        },
        {
            "name": "jobs"
        },
        {
            "name": "labels"
        },
        {
            "name": "licenses"
        },
        {
            "name": "notifications"
        },
        {
            "name": "pools"
        },
        {
            "name": "probes"
        },
        {
            "name": "protectiongroups"
        },
        {
            "name": "protectionpolicies"
        },
        {
            "name": "recovers"
        },
        {
            "name": "rules"
        },
        {
            "name": "server"
        },
        {
            "name": "sessions"
        },
        {
            "name": "storagenodes"
        },
        {
            "name": "tenants"
        },
        {
            "name": "vmware"
        },
        {
            "name": "volumes"
        }
    ],
    "paths": {
        "/alerts": {
            "get": {
                "tags": [
                    "alerts"
                ],
                "description": "Returns the most recent alert messages.",
                "operationId": "getAlerts",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/AlertList"
                        }
                    }
                }
            }
        },
        "/auditlogconfig": {
            "get": {
                "tags": [
                    "server"
                ],
                "description": "Returns the security audit log settings.",
                "operationId": "getAuditLogConfig",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/AuditLogConfiguration"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "server"
                ],
                "description": "Updates the security audit log settings.",
                "operationId": "putAuditLogConfig",
                "parameters": [
                    {
                        "in": "body",
                        "name": "auditLogConfig",
                        "description": "Audit log settings for update.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AuditLogConfiguration"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was updated successfully."
                    }
                }
            }
        },
        "/backups": {
            "get": {
                "tags": [
                    "backups"
                ],
                "description": "Returns information on all the backups.",
                "operationId": "getBackups",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/BackupList"
                        }
                    }
                }
            }
        },
        "/backups/{backupId}": {
            "get": {
                "tags": [
                    "backups"
                ],
                "description": "Returns the information on the specific backup.",
                "operationId": "getBackup",
                "parameters": [
                    {
                        "name": "backupId",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/Backup"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "backups"
                ],
                "description": "Deletes the specified backup.",
                "operationId": "deleteBackup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "backupId",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was retrieved successfully."
                    }
                }
            }
        },
        "/backups/{backupId}/instances": {
            "get": {
                "tags": [
                    "backups"
                ],
                "description": "Returns a list of backup instances.",
                "operationId": "getBackupInstances",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "backupId",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/BackupInstanceList"
                        }
                    }
                }
            }
        },
        "/backups/{backupId}/instances/{instanceId}": {
            "get": {
                "tags": [
                    "backups"
                ],
                "description": "Returns information on specific backup instance.",
                "operationId": "getBackupInstance",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "backupId",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "instanceId",
                        "in": "path",
                        "description": "is the value of the id attribute in the instance object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/BackupInstance"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "backups"
                ],
                "description": "Deletes the specific backup instance.",
                "operationId": "deleteBackupInstance",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "backupId",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "instanceId",
                        "in": "path",
                        "description": "is the value of the id attribute in the instance object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was retrieved successfully."
                    }
                }
            }
        },
        "/clients": {
            "get": {
                "tags": [
                    "clients"
                ],
                "description": "Returns a list of all clients.",
                "operationId": "getClients",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/ClientList"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "clients"
                ],
                "description": "Creates a new client.",
                "operationId": "postClient",
                "parameters": [
                    {
                        "in": "body",
                        "name": "client",
                        "description": "Client to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource was created successfully."
                    }
                }
            }
        },
        "/clients/{clientId}": {
            "get": {
                "tags": [
                    "clients"
                ],
                "description": "Returns the specific client.",
                "operationId": "getClient",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "is the value of the id attribute of the client object's resourceId.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "clients"
                ],
                "description": "Deletes the specified client.",
                "operationId": "deleteClient",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "is the value of the id attribute of the client object's resourceId.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was retrieved successfully."
                    }
                }
            },
            "put": {
                "tags": [
                    "clients"
                ],
                "description": "Updates the specified client.",
                "operationId": "putClient",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "is the value of the id attribute of the client object's resourceId.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "client",
                        "in": "body",
                        "description": "Client to modify.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was updated successfully."
                    }
                }
            }
        },
        "/clients/{clientId}/backups": {
            "get": {
                "tags": [
                    "clients"
                ],
                "description": "Returns a list of information on all the backups for a given client.",
                "operationId": "getClientBackups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "is the value of the id attribute of the client object's resourceId.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/BackupList"
                        }
                    }
                }
            }
        },
        "/clients/{clientId}/backups/{backupId}": {
            "get": {
                "tags": [
                    "clients"
                ],
                "description": "Returns information on specific backup for the given client.",
                "operationId": "getClientBackup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "is the value of the id attribute of the client object's resourceId.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backupId",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/Backup"
                        }
                    }
                }
            }
        },
        "/clients/{clientId}/backups/{backupId}/instances": {
            "get": {
                "tags": [
                    "clients"
                ],
                "description": "Returns a list of backup instances for a given backup associated with a specific client.",
                "operationId": "getClientBackupInstances",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "is the value of the id attribute of the client object's resourceId.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backupId",
                        "in": "path",
                        "description": "is the value of the id attribute in the instance object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/BackupInstanceList"
                        }
                    }
                }
            }
        },
        "/clients/{clientId}/backups/{backupId}/instances/{instanceId}": {
            "get": {
                "tags": [
                    "clients"
                ],
                "description": "Returns a specific backup instance for a given backup associated with a specific client.",
                "operationId": "getClientBackupInstance",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "is the value of the id attribute of the client object's resourceId.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backupId",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "instanceId",
                        "in": "path",
                        "description": "is the value of the id attribute in the instance object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/BackupInstance"
                        }
                    }
                }
            }
        },
        "/clients/{clientId}/op/backup": {
            "post": {
                "tags": [
                    "clients"
                ],
                "description": "Backup save sets for a given client.",
                "operationId": "clientOpBackup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "is the value of the id attribute of the client object's resourceId.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "clientOpBackup",
                        "description": "Parameters to start the backup.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClientOpBackup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A job is created. The Job URI can be found in the location header of the response."
                    }
                }
            }
        },
        "/clients/{clientId}/indexes": {
            "get": {
                "tags": [
                    "clients"
                ],
                "description": "Returns a list of indexes.",
                "operationId": "getClientIndexes",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "is the value of the id attribute of the client object's resourceId.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/IndexList"
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/cloudboostappliances": {
            "get": {
                "tags": [
                    "cloudboostappliances"
                ],
                "description": "Returns a list of CloudBoost appliances.",
                "operationId": "getCloudBoostAppliances",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/CloudboostApplianceList"
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/cloudboostappliances/{cloudboostapplianceId}": {
            "get": {
                "tags": [
                    "cloudboostappliances"
                ],
                "description": "Returns the specific CloudBoost appliance.",
                "operationId": "getCloudBoostAppliance",
                "parameters": [
                    {
                        "name": "cloudboostapplianceId",
                        "in": "path",
                        "description": "is the value of the id attribute of the CloudBoost object's resourceId.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/CloudboostAppliance"
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/devices": {
            "get": {
                "tags": [
                    "devices"
                ],
                "description": "Returns a list of devices.",
                "operationId": "getDevices",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/DeviceList"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "devices"
                ],
                "description": "Creates a new device.",
                "operationId": "postDevices",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "device",
                        "description": "Device to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource was created successfully."
                    }
                }
            }
        },
        "/devices/{deviceId}": {
            "get": {
                "tags": [
                    "devices"
                ],
                "description": "Returns the specific device.",
                "operationId": "getDevice",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "deviceId",
                        "in": "path",
                        "description": "is the value of the name attribute in the device object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "devices"
                ],
                "description": "Deletes the specific device.",
                "operationId": "deleteDevice",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "deviceId",
                        "in": "path",
                        "description": "is the value of the name attribute in the device object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was retrieved successfully."
                    }
                }
            },
            "put": {
                "tags": [
                    "devices"
                ],
                "description": "Updates the specific device.",
                "operationId": "putDevice",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "deviceId",
                        "in": "path",
                        "description": "is the value of the name attribute in the device object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "device",
                        "description": "Device data for the update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was updated successfully."
                    }
                }
            }
        },
        "/devices/{deviceId}/opstatus": {
            "get": {
                "tags": [
                    "devices"
                ],
                "description": "Returns status of the specific device.",
                "operationId": "getDeviceOpStatus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "deviceId",
                        "in": "path",
                        "description": "is the value of the name attribute in the device object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/DeviceOpStatus"
                        }
                    }
                }
            }
        },
        "/devices/{deviceId}/op/label": {
            "post": {
                "tags": [
                    "devices"
                ],
                "description": "Creates a label for the specific device resource.",
                "operationId": "postDeviceOpLabel",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "deviceId",
                        "in": "path",
                        "description": "is the value of the name attribute in the device object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "deviceOpLabel",
                        "description": "Device label to be applied.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeviceOpLabel"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted."
                    }
                }
            }
        },
        "/devices/{deviceId}/op/mount": {
            "post": {
                "tags": [
                    "devices"
                ],
                "description": "Mounts a volume into a device.",
                "operationId": "postDeviceOpMount",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "deviceId",
                        "in": "path",
                        "description": "is the value of the name attribute in the device object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "deviceOpMount",
                        "description": "Mount information.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeviceOpMount"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted."
                    }
                }
            }
        },
        "/devices/{deviceId}/op/unmount": {
            "post": {
                "tags": [
                    "devices"
                ],
                "description": "Unmounts a volume from the specific device.",
                "operationId": "postDeviceOpUnmount",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "deviceId",
                        "in": "path",
                        "description": "is the value of the name attribute in the device object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted."
                    }
                }
            }
        },
        "/devices/{deviceId}/op/verifylabel": {
            "post": {
                "tags": [
                    "devices"
                ],
                "description": "Verifies the label in the specific device. Note: Verifying a label unmounts the mounted volumes.",
                "operationId": "postDeviceOpVerifyLabel",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "deviceId",
                        "in": "path",
                        "description": "is the value of the name attribute in the device object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted."
                    }
                }
            }
        },
        "/directives": {
            "get": {
                "tags": [
                    "directives"
                ],
                "description": "Returns a list of directives.",
                "operationId": "getDirectives",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/DirectiveList"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "directives"
                ],
                "description": "Creates a new directive.",
                "operationId": "postDirectives",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "directive",
                        "description": "Directive to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Directive"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource was created successfully."
                    }
                }
            }
        },
        "/directives/{directiveId}": {
            "get": {
                "tags": [
                    "directives"
                ],
                "description": "Returns the specific directive.",
                "operationId": "getDirective",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "directiveId",
                        "in": "path",
                        "description": "is the value of the name attribute in the directive object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/Directive"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "directives"
                ],
                "description": "Deletes the specific directive.",
                "operationId": "deleteDirective",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "directiveId",
                        "in": "path",
                        "description": "is the value of the name attribute in the directive object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was retrieved successfully."
                    }
                }
            },
            "put": {
                "tags": [
                    "directives"
                ],
                "description": "Updates the specific directive.",
                "operationId": "putDirective",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "directiveId",
                        "in": "path",
                        "description": "is the value of the name attribute in the directive object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "directive",
                        "description": "Directive data for update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Directive"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was updated successfully."
                    }
                }
            }
        },
        "/jobgroups": {
            "get": {
                "tags": [
                    "jobs"
                ],
                "description": "Returns a list of job groups.",
                "operationId": "getJobGroups",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/JobList"
                        }
                    }
                }
            }
        },
        "/jobgroups/{jobGroupId}": {
            "get": {
                "tags": [
                    "jobs"
                ],
                "description": "Returns a list of jobs that belong to the job group.",
                "operationId": "getJobGroup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "jobGroupId",
                        "in": "path",
                        "description": "is the value of the id attribute in the job group object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/JobList"
                        }
                    }
                }
            }
        },
        "/jobindications": {
            "get": {
                "tags": [
                    "jobs"
                ],
                "description": "Returns a list of job indications.",
                "operationId": "getJobIndications",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/JobIndicationList"
                        }
                    }
                }
            }
        },
        "/jobs": {
            "get": {
                "tags": [
                    "jobs"
                ],
                "description": "Returns a list of jobs.",
                "operationId": "getJobs",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/JobList"
                        }
                    }
                }
            }
        },
        "/jobs/{jobId}": {
            "get": {
                "tags": [
                    "jobs"
                ],
                "description": "Returns the specific job.",
                "operationId": "getJob",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "jobId",
                        "in": "path",
                        "description": "is the value of the id attribute in the job object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/Job"
                        }
                    }
                }
            }
        },
        "/jobs/{jobId}/log": {
            "get": {
                "tags": [
                    "jobs"
                ],
                "description": "Returns a log file for a job.",
                "operationId": "getJobLog",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "jobId",
                        "in": "path",
                        "description": "is the value of the id attribute in the job object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "description": "Log file contents."
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/jobs/{jobId}/op/cancel": {
            "post": {
                "tags": [
                    "jobs"
                ],
                "description": "Cancels the specific job.",
                "operationId": "postJobOpCancel",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "jobId",
                        "in": "path",
                        "description": "is the value of the id attribute in the job object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "jobOpCancel",
                        "description": "Empty JSON body as a parameter.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobOpCancel"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted."
                    }
                }
            }
        },
        "/labels": {
            "get": {
                "tags": [
                    "labels"
                ],
                "description": "Returns a list of labels.",
                "operationId": "getLabels",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/LabelList"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "labels"
                ],
                "description": "Creates a new label.",
                "operationId": "postLabel",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "label",
                        "description": "Label to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Label"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource was created successfully."
                    }
                }
            }
        },
        "/labels/{labelId}": {
            "get": {
                "tags": [
                    "labels"
                ],
                "description": "Returns the specific label.",
                "operationId": "getLabel",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "labelId",
                        "in": "path",
                        "description": "is the value of the name attribute in the label object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/Label"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "labels"
                ],
                "description": "Deletes the specific label.",
                "operationId": "deleteLabel",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "labelId",
                        "in": "path",
                        "description": "is the value of the name attribute in the label object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was retrieved successfully."
                    }
                }
            },
            "put": {
                "tags": [
                    "labels"
                ],
                "description": "Updates the specific label.",
                "operationId": "putLabel",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "labelId",
                        "in": "path",
                        "description": "is the value of the name attribute in the label object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "label",
                        "description": "Label data for update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Label"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was updated successfully."
                    }
                }
            }
        },
        "/licenses": {
            "get": {
                "tags": [
                    "licenses"
                ],
                "description": "Returns a list of licenses.",
                "operationId": "getLicenses",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/LicenseList"
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/licenses/{licenseId}": {
            "get": {
                "tags": [
                    "licenses"
                ],
                "description": "Returns a specified license.",
                "operationId": "getLicense",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "licenseId",
                        "in": "path",
                        "description": "is the value of the id attribute of the license object's resourceId.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/License"
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/notifications": {
            "get": {
                "tags": [
                    "notifications"
                ],
                "description": "Returns a list of notifications.",
                "operationId": "getNotifications",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/NotificationList"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "notifications"
                ],
                "description": "Creates a new notification.",
                "operationId": "postNotification",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "notification",
                        "description": "Notification to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource was created successfully."
                    }
                }
            }
        },
        "/notifications/{notificationId}": {
            "get": {
                "tags": [
                    "notifications"
                ],
                "description": "Returns the specific notification.",
                "operationId": "getNotification",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "notificationId",
                        "in": "path",
                        "description": "is the value of the name attribute in the notification object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "notifications"
                ],
                "description": "Deletes the specific notification.",
                "operationId": "deleteNotification",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "notificationId",
                        "in": "path",
                        "description": "is the value of the name attribute in the notification object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was retrieved successfully."
                    }
                }
            },
            "put": {
                "tags": [
                    "notifications"
                ],
                "description": "Updates the specific notification.",
                "operationId": "putNotification",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "notificationId",
                        "in": "path",
                        "description": "is the value of the name attribute in the notification object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "notification",
                        "description": "Notification data for update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was updated successfully."
                    }
                }
            }
        },
        "/protectionpolicies": {
            "get": {
                "tags": [
                    "protectionpolicies"
                ],
                "description": "Returns a list of policies.",
                "operationId": "getPolicies",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/PolicyList"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "protectionpolicies"
                ],
                "description": "Creates a new policy.",
                "operationId": "postPolicy",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "policy",
                        "description": "Policy to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Policy"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource was created successfully."
                    }
                }
            }
        },
        "/protectionpolicies/{policyId}": {
            "get": {
                "tags": [
                    "protectionpolicies"
                ],
                "description": "Returns the specific policy.",
                "operationId": "getPolicy",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "policyId",
                        "in": "path",
                        "description": "is the value of the name attribute in the protection policy object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/Policy"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "protectionpolicies"
                ],
                "description": "Deletes the specific policy.",
                "operationId": "deletePolicy",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "policyId",
                        "in": "path",
                        "description": "is the value of the name attribute in the protection policy object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was retrieved successfully."
                    }
                }
            },
            "put": {
                "tags": [
                    "protectionpolicies"
                ],
                "description": "Updates the specific policy.",
                "operationId": "putPolicy",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "policyId",
                        "in": "path",
                        "description": "is the value of the name attribute in the protection policy object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "policy",
                        "description": "Policy data for update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Policy"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was updated successfully."
                    }
                }
            }
        },
        "/protectionpolicies/{policyId}/jobgroups": {
            "get": {
                "tags": [
                    "protectionpolicies"
                ],
                "description": "Returns a list of job groups for a given policy.",
                "operationId": "getPolicyJobGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "policyId",
                        "in": "path",
                        "description": "is the value of the name attribute in the protection policy object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/JobList"
                        }
                    }
                }
            }
        },
        "/protectionpolicies/{policyId}/jobgroups/{jobGroupId}": {
            "get": {
                "tags": [
                    "protectionpolicies"
                ],
                "description": "Returns a list of jobs for a given job group.",
                "operationId": "getPolicyJobGroup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "policyId",
                        "in": "path",
                        "description": "is the value of the name attribute in the protection policy object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "jobGroupId",
                        "in": "path",
                        "description": "is the value of the id attribute in the job group object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/JobList"
                        }
                    }
                }
            }
        },
        "/protectionpolicies/{policyId}/workflows": {
            "get": {
                "tags": [
                    "protectionpolicies"
                ],
                "description": "Returns a list of workflows for a policy.",
                "operationId": "getPolicyWorkflows",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "policyId",
                        "in": "path",
                        "description": "is the value of the name attribute in the protection policy object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/PolicyWorkflowList"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "protectionpolicies"
                ],
                "description": "Creates a new workflow.",
                "operationId": "postPolicyWorkflow",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "policyId",
                        "in": "path",
                        "description": "is the value of the name attribute in the protection policy object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "workflow",
                        "description": "Workflow to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PolicyWorkflow"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource was created successfully."
                    }
                }
            }
        },
        "/protectionpolicies/{policyId}/workflows/{workflowId}": {
            "get": {
                "tags": [
                    "protectionpolicies"
                ],
                "description": "Returns the specific workflow.",
                "operationId": "getPolicyWorkflow",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "policyId",
                        "in": "path",
                        "description": "is the value of the name attribute in the protection policy object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workflowId",
                        "in": "path",
                        "description": "is the value of the name attribute in the workflow object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/PolicyWorkflow"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "protectionpolicies"
                ],
                "description": "Deletes the specific workflow.",
                "operationId": "deletePolicyWorkflow",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "policyId",
                        "in": "path",
                        "description": "is the value of the name attribute in the protection policy object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workflowId",
                        "in": "path",
                        "description": "is the value of the name attribute in the workflow object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was retrieved successfully."
                    }
                }
            },
            "put": {
                "tags": [
                    "protectionpolicies"
                ],
                "description": "Updates the specific workflow.",
                "operationId": "putPolicyWorkflow",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "policyId",
                        "in": "path",
                        "description": "is the value of the name attribute in the protection policy object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workflowId",
                        "in": "path",
                        "description": "is the value of the name attribute in the workflow object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "workflow",
                        "description": "Workflow data for update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PolicyWorkflow"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was updated successfully."
                    }
                }
            }
        },
        "/protectionpolicies/{policyId}/workflows/{workflowId}/jobgroups": {
            "get": {
                "tags": [
                    "protectionpolicies"
                ],
                "description": "Returns a list of job groups for a given workflow.",
                "operationId": "getPolicyWorkflowJobGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "policyId",
                        "in": "path",
                        "description": "is the value of the name attribute in the protection policy object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workflowId",
                        "in": "path",
                        "description": "is the value of the name attribute in the workflow object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/JobList"
                        }
                    }
                }
            }
        },
        "/protectionpolicies/{policyId}/workflows/{workflowId}/jobgroups/{jobGroupId}": {
            "get": {
                "tags": [
                    "protectionpolicies"
                ],
                "description": "Returns a list of jobs for a given job group.",
                "operationId": "getPolicyWorkflowJobGroup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "policyId",
                        "in": "path",
                        "description": "is the value of the name attribute in the protection policy object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workflowId",
                        "in": "path",
                        "description": "is the value of the name attribute in the workflow object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "jobGroupId",
                        "in": "path",
                        "description": "is the value of the id attribute in the job group object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/JobList"
                        }
                    }
                }
            }
        },
        "/protectionpolicies/{policyId}/workflows/{workflowId}/op/backup": {
            "post": {
                "tags": [
                    "protectionpolicies"
                ],
                "description": "Starts the specified workflow.",
                "operationId": "postPolicyWorkflowOpBackup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "policyId",
                        "in": "path",
                        "description": "is the value of the name attribute in the protection policy object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "workflowId",
                        "in": "path",
                        "description": "is the value of the name attribute in the workflow object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "policyWorkflowOpBackup",
                        "description": "Parameters to start the workflow.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PolicyWorkflowOpBackup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A job is created. The Job URI can be found in the location header of the response."
                    }
                }
            }
        },
        "/pools": {
            "get": {
                "tags": [
                    "pools"
                ],
                "description": "Returns a list of media pools.",
                "operationId": "getPools",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/PoolList"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "pools"
                ],
                "description": "Creates a new media pool.",
                "operationId": "postPools",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "pool",
                        "description": "Media pool to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Pool"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource was created successfully."
                    }
                }
            }
        },
        "/pools/{poolId}": {
            "get": {
                "tags": [
                    "pools"
                ],
                "description": "Returns the specific media pool.",
                "operationId": "getPool",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "poolId",
                        "in": "path",
                        "description": "is the value of the name attribute in the pool object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/Pool"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "pools"
                ],
                "description": "Deletes the specific media pool.",
                "operationId": "deletePool",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "poolId",
                        "in": "path",
                        "description": "is the value of the name attribute in the pool object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was retrieved successfully."
                    }
                }
            },
            "put": {
                "tags": [
                    "pools"
                ],
                "description": "Updates the specific media pool.",
                "operationId": "putPool",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "poolId",
                        "in": "path",
                        "description": "is the value of the name attribute in the pool object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "pool",
                        "description": "Media pool data for the update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Pool"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was updated successfully."
                    }
                }
            }
        },
        "/probes": {
            "get": {
                "tags": [
                    "probes"
                ],
                "description": "Returns a list of probes.",
                "operationId": "getProbes",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/ProbeList"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "probes"
                ],
                "description": "Creates a new probe.",
                "operationId": "postProbes",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "probe",
                        "description": "Probe to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Probe"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource was created successfully."
                    }
                }
            }
        },
        "/probes/{probeId}": {
            "get": {
                "tags": [
                    "probes"
                ],
                "description": "Returns the specific probe.",
                "operationId": "getProbe",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "probeId",
                        "in": "path",
                        "description": "is the value of the name attribute in the probe object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/Probe"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "probes"
                ],
                "description": "Deletes the specific probe.",
                "operationId": "deleteProbe",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "probeId",
                        "in": "path",
                        "description": "is the value of the name attribute in the probe object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was retrieved successfully."
                    }
                }
            },
            "put": {
                "tags": [
                    "probes"
                ],
                "description": "Updates the specific probe.",
                "operationId": "putProbe",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "probeId",
                        "in": "path",
                        "description": "is the value of the name attribute in the probe object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "probe",
                        "description": "Probe data for the update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Probe"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was updated successfully."
                    }
                }
            }
        },
        "/rules": {
            "get": {
                "tags": [
                    "rules"
                ],
                "description": "Returns a list of rules.",
                "operationId": "getRules",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/RuleList"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "rules"
                ],
                "description": "Creates a new rule.",
                "operationId": "postRules",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "rule",
                        "description": "Rule to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Rule"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource was created successfully."
                    }
                }
            }
        },
        "/rules/{ruleName}": {
            "get": {
                "tags": [
                    "rules"
                ],
                "description": "Returns the specific rule.",
                "operationId": "getRule",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "ruleName",
                        "in": "path",
                        "description": "is the value of the name attribute in the rule object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/Rule"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "rules"
                ],
                "description": "Deletes the specific rule.",
                "operationId": "deleteRule",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "ruleName",
                        "in": "path",
                        "description": "is the value of the name attribute in the rule object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was retrieved successfully."
                    }
                }
            },
            "put": {
                "tags": [
                    "rules"
                ],
                "description": "Updates the specific rule.",
                "operationId": "putRule",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "ruleName",
                        "in": "path",
                        "description": "is the value of the name attribute in the rule object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "rule",
                        "description": "Rule data for the update",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Rule"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was updated successfully."
                    }
                }
            }
        },
        "/protectiongroups": {
            "get": {
                "tags": [
                    "protectiongroups"
                ],
                "description": "Returns a list of protection groups.",
                "operationId": "getProtectionGroups",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/ProtectionGroupList"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "protectiongroups"
                ],
                "description": "Creates a new protection group.",
                "operationId": "postProtectionGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "protectiongroups",
                        "description": "Protection group to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProtectionGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource was created successfully."
                    }
                }
            }
        },
        "/protectiongroups/{protectionGroupId}": {
            "get": {
                "tags": [
                    "protectiongroups"
                ],
                "description": "Returns the specific protection group.",
                "operationId": "getProtectionGroup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "protectionGroupId",
                        "in": "path",
                        "description": "is the value of the name attribute in the protection group object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/ProtectionGroup"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "protectiongroups"
                ],
                "description": "Deletes the specific protection group.",
                "operationId": "deleteProtectionGroup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "protectionGroupId",
                        "in": "path",
                        "description": "is the value of the name attribute in the protection group object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was retrieved successfully."
                    }
                }
            },
            "put": {
                "tags": [
                    "protectiongroups"
                ],
                "description": "Updates the specific protection group.",
                "operationId": "putProtectionGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "protectionGroupId",
                        "in": "path",
                        "description": "is the value of the name attribute in the protection group object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "protectionGroup",
                        "description": "Protection group data for the update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProtectionGroup"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was updated successfully."
                    }
                }
            }
        },
        "/protectiongroups/{protectionGroupId}/op/updatevmwareworkitems": {
            "post": {
                "tags": [
                    "protectiongroups"
                ],
                "description": "Updates the work items for VMware/all protection groups.",
                "operationId": "updateVMwareWorkItems",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "protectionGroupId",
                        "in": "path",
                        "description": "is the value of the name attribute in the protection group object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "VMwareWorkItemOpUpdate",
                        "description": "Parameters to update the VMware work items.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VMwareWorkItemOpUpdate"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted."
                    }
                }
            }
        },
        "/recovers": {
            "get": {
                "tags": [
                    "recovers"
                ],
                "description": "Returns a list of all recovery resources.",
                "operationId": "getRecovers",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/RecoverList"
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "recovers"
                ],
                "description": "Creates a new recovery resource and triggers a new just-in-time recovery.",
                "operationId": "postRecover",
                "parameters": [
                    {
                        "in": "body",
                        "name": "recover",
                        "description": "Recovery resource to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Recover"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource was created successfully."
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/recovers/{recoverId}": {
            "get": {
                "tags": [
                    "recovers"
                ],
                "description": "Returns the specific recovery resource.",
                "operationId": "getRecover",
                "parameters": [
                    {
                        "name": "recoverId",
                        "in": "path",
                        "description": "is the value of the id attribute of the recover object's resourceId.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/Recover"
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "recovers"
                ],
                "description": "Deletes the specific recovery resource.",
                "operationId": "deleteRecover",
                "parameters": [
                    {
                        "name": "recoverId",
                        "in": "path",
                        "description": "is the value of the id attribute of the recover object's resourceId.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was retrieved successfully."
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/serverconfig": {
            "get": {
                "tags": [
                    "server"
                ],
                "description": "Returns the server configuration settings.",
                "operationId": "getServerConfig",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/ServerConfiguration"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "server"
                ],
                "description": "Updates the server configuration settings.",
                "operationId": "putServerConfig",
                "parameters": [
                    {
                        "in": "body",
                        "name": "serverConfig",
                        "description": "Server configuration settings for update.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ServerConfiguration"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was updated successfully."
                    }
                }
            }
        },
        "/servermessages": {
            "get": {
                "tags": [
                    "server"
                ],
                "description": "Returns a list of server messages.",
                "operationId": "getServerMessages",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/ServerMessageList"
                        }
                    }
                }
            }
        },
        "/serverstatistics": {
            "get": {
                "tags": [
                    "server"
                ],
                "description": "Returns the server statistics.",
                "operationId": "getServerStatistics",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/ServerStatistics"
                        }
                    }
                }
            }
        },
        "/sessions": {
            "get": {
                "tags": [
                    "sessions"
                ],
                "description": "Returns a list of sessions.",
                "operationId": "getSessions",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/SessionList"
                        }
                    }
                }
            }
        },
        "/sessions/{sessionId}": {
            "get": {
                "tags": [
                    "sessions"
                ],
                "description": "Returns the specific session.",
                "operationId": "getSession",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "sessionId",
                        "in": "path",
                        "description": "is the value of the id attribute in the session object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/Session"
                        }
                    }
                }
            }
        },
        "/sessions/{sessionId}/op/cancel": {
            "post": {
                "tags": [
                    "sessions"
                ],
                "description": "Cancels the specified session.",
                "operationId": "postSessionOpCancel",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "sessionId",
                        "in": "path",
                        "description": "is the value of the id attribute in the session object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "jobOpCancel",
                        "description": "Cancel parameters.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JobOpCancel"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted."
                    }
                }
            }
        },
        "/storagenodes": {
            "get": {
                "tags": [
                    "storagenodes"
                ],
                "description": "Returns a list of storage nodes.",
                "operationId": "getStorageNodes",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/StorageNodeList"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "storagenodes"
                ],
                "description": "Creates a new storage node.",
                "operationId": "postStorageNodes",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "storageNode",
                        "description": "Storage node to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StorageNode"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource was created successfully."
                    }
                }
            }
        },
        "/storagenodes/{storageNodeId}": {
            "get": {
                "tags": [
                    "storagenodes"
                ],
                "description": "Returns the specific storage node.",
                "operationId": "getStorageNode",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "storageNodeId",
                        "in": "path",
                        "description": "is the value of the name attribute in the storage node object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/StorageNode"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "storagenodes"
                ],
                "description": "Deletes the specific storage node.",
                "operationId": "deleteStorageNode",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "storageNodeId",
                        "in": "path",
                        "description": "is the value of the name attribute in the storage node object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was retrieved successfully."
                    }
                }
            },
            "put": {
                "tags": [
                    "storagenodes"
                ],
                "description": "Updates the specific storage node.",
                "operationId": "putStorageNode",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "storageNodeId",
                        "in": "path",
                        "description": "is the value of the name attribute in the storage node object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "storageNode",
                        "description": "Storage node data for the update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StorageNode"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was updated successfully."
                    }
                }
            }
        },
        "/tenants": {
            "get": {
                "tags": [
                    "tenants"
                ],
                "description": "Returns a list of tenants.",
                "operationId": "getTenants",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/TenantList"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "tenants"
                ],
                "description": "Creates a new tenant.",
                "operationId": "postTenant",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "tenant",
                        "description": "Tenant to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Tenant"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource was created successfully."
                    }
                }
            }
        },
        "/tenants/{tenantId}": {
            "get": {
                "tags": [
                    "tenants"
                ],
                "description": "Returns the specific tenant.",
                "operationId": "getTenant",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "tenantId",
                        "in": "path",
                        "description": "is the value of the id attribute of the tenant object's resourceId.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/Tenant"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "tenants"
                ],
                "description": "Deletes the specific tenant.",
                "operationId": "deleteTenant",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "tenantId",
                        "in": "path",
                        "description": "is the value of the id attribute of the tenant object's resourceId.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was retrieved successfully."
                    }
                }
            },
            "put": {
                "tags": [
                    "tenants"
                ],
                "description": "Updates the specific tenant.",
                "operationId": "putTenant",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "tenantId",
                        "in": "path",
                        "description": "is the value of the id attribute of the tenant object's resourceId.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "tenant",
                        "description": "Tenant data for the update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Tenant"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was updated successfully."
                    }
                }
            }
        },
        "/usergroups": {
            "get": {
                "tags": [
                    "server"
                ],
                "description": "Returns a list of user groups.",
                "operationId": "getUserGroups",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/UserGroupList"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "server"
                ],
                "description": "Creates a new user group.",
                "operationId": "postUserGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "usergroups",
                        "description": "User group to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource was created successfully."
                    }
                }
            }
        },
        "/usergroups/{userGroupId}": {
            "get": {
                "tags": [
                    "server"
                ],
                "description": "Returns the specific user group.",
                "operationId": "getUserGroup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userGroupId",
                        "in": "path",
                        "description": "is the value of the name attribute in the user group object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/UserGroup"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "server"
                ],
                "description": "Deletes the specific user group.",
                "operationId": "deleteUserGroup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userGroupId",
                        "in": "path",
                        "description": "is the value of the name attribute in the user group object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was retrieved successfully."
                    }
                }
            },
            "put": {
                "tags": [
                    "server"
                ],
                "description": "Updates the specific user group.",
                "operationId": "putUserGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userGroupId",
                        "in": "path",
                        "description": "is the value of the name attribute in the user group object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "userGroup",
                        "description": "User group data for the update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserGroup"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was updated successfully."
                    }
                }
            }
        },
        "/vmware/op/refreshvcenters": {
            "post": {
                "tags": [
                    "vmware"
                ],
                "description": "Refreshes the NetWorker information for all the vCenters.",
                "operationId": "postVMwareOpRefreshVCenters",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Operation started successfully, location header contains a job URI to be monitored."
                    }
                }
            }
        },
        "/vmware/protectedvms": {
            "get": {
                "tags": [
                    "vmware"
                ],
                "description": "Returns a list of protected VMs.",
                "operationId": "getVMwareProtectedVms",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/VMwareProtectedVmList"
                        }
                    }
                }
            }
        },
        "/vmware/vcenters": {
            "get": {
                "tags": [
                    "vmware"
                ],
                "description": "Returns a list of vCenters.",
                "operationId": "getVCenters",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/VCenterList"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "vmware"
                ],
                "description": "Creates a new vCenter.",
                "operationId": "postVCenter",
                "parameters": [
                    {
                        "in": "body",
                        "name": "vcenter",
                        "description": "vCenter to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VCenter"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource was created successfully."
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}": {
            "get": {
                "tags": [
                    "vmware"
                ],
                "description": "Returns the specific vCenter.",
                "operationId": "getVCenter",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/VCenter"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "vmware"
                ],
                "description": "Deletes the specific vCenter.",
                "operationId": "deleteVCenter",
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was retrieved successfully."
                    }
                }
            },
            "put": {
                "tags": [
                    "vmware"
                ],
                "description": "Updates the specific vCenter.",
                "operationId": "putVCenter",
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vcenter",
                        "in": "body",
                        "description": "vCenter to modify.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VCenter"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was updated successfully."
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}/plugins": {
            "post": {
                "tags": [
                    "vmware"
                ],
                "description": "Install NetWorker plug-ins for the specific vCenter.",
                "operationId": "postVCenterPlugin",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "vCenterPlugin",
                        "description": "Parameters to install the plug-in.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VCenterPlugin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation completed successfully."
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}/op/refresh": {
            "post": {
                "tags": [
                    "vmware"
                ],
                "description": "Refreshes NetWorker information for the specific vCenter.",
                "operationId": "postVCenterOpRefresh",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Operation started successfully, location header contains a job URI to be monitored."
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}/protectedvms": {
            "get": {
                "tags": [
                    "vmware"
                ],
                "description": "Returns a list of protected VMs for a specific vCenter.",
                "operationId": "getVCenterProtectedVms",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/VMwareProtectedVmList"
                        }
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}/protectedvms/{vm-uuid}": {
            "get": {
                "tags": [
                    "vmware"
                ],
                "description": "Returns a specific protected VM for a specific vCenter.",
                "operationId": "getVCenterProtectedVm",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the protected VM object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/VMwareProtectedVm"
                        }
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}/protectedvms/{vm-uuid}/backups": {
            "get": {
                "tags": [
                    "vmware"
                ],
                "description": "Returns a list of backups (save sets) for a specific protected VM.",
                "operationId": "getVCenterProtectedVmBackups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the protected VM object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/BackupList"
                        }
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}/protectedvms/{vm-uuid}/backups/{backup-id}/instances": {
            "get": {
                "tags": [
                    "vmware"
                ],
                "description": "Returns a list of instances (clones) for a specific protected VM backup.",
                "operationId": "getVCenterProtectedVmBackupInstances",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the protected VM object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backup-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/BackupInstanceList"
                        }
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}/protectedvms/{vm-uuid}/backups/{backup-id}/op/recover": {
            "post": {
                "tags": [
                    "vmware"
                ],
                "description": "Starts a recovery of a selected protected VM backup.",
                "operationId": "postVCenterProtectedVmBackupRecover",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the protected VM object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backup-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "vmwareVmOpRecover",
                        "description": "Parameters to start the recovery.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VMwareVmOpRecover"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource was created successfully."
                    },
                    "202": {
                        "description": "Accepted."
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}/protectedvms/{vm-uuid}/backups/{backup-id}/op/vmmount": {
            "post": {
                "tags": [
                    "vmware"
                ],
                "description": "Mounts a selected protected VM backup for purposes of FLR.",
                "operationId": "postVCenterProtectedVmBackupVmMount",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the protected VM object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backup-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "backupOpVmMount",
                        "description": "Parameters to start the mount.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupOpVmMount"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A job is created. The Job URI can be found in the location header of the response."
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}/protectedvms/{vm-uuid}/backups/{backup-id}/op/vmmount/{vproxy-mount-session-id}": {
            "get": {
                "tags": [
                    "vmware"
                ],
                "description": "Returns the specific mount session.",
                "operationId": "getBackupVProxyVmMountSessionResponse",
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the protected VM object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backup-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vproxy-mount-session-id",
                        "in": "path",
                        "description": "is the value of the vProxyMountSessionId attribute in the vproxy VM mount job object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmMountSessionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}/protectedvms/{vm-uuid}/backups/{backup-id}/op/vmmount/{vproxy-mount-session-id}/vmbrowse": {
            "get": {
                "tags": [
                    "vmware"
                ],
                "description": "Returns a list of all vmbrowse sessions.",
                "operationId": "getBackupVProxyVmBrowseSessionResponseList",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the protected VM object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backup-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vproxy-mount-session-id",
                        "in": "path",
                        "description": "is the value of the vProxyMountSessionId attribute in the vproxy VM mount job object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionResponseList"
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "vmware"
                ],
                "description": "Creates a new vmbrowse session.",
                "operationId": "postBackupVProxyVmBrowseSessionRequest",
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the protected VM object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backup-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vproxy-mount-session-id",
                        "in": "path",
                        "description": "is the value of the vProxyMountSessionId attribute in the vproxy VM mount job object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "VProxyVmBrowseSessionRequest",
                        "description": "The vmbrowse session details to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource was created successfully.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}/protectedvms/{vm-uuid}/backups/{backup-id}/op/vmmount/{vproxy-mount-session-id}/vmbrowse/{vproxy-browse-session-id}": {
            "get": {
                "tags": [
                    "vmware"
                ],
                "description": "Returns the specific VM browse session.",
                "operationId": "getBackupVProxyVmBrowseSessionResponse",
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the protected VM object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backup-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vproxy-mount-session-id",
                        "in": "path",
                        "description": "is the value of the vProxyMountSessionId attribute in the vproxy VM mount job object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vproxy-browse-session-id",
                        "in": "path",
                        "description": "is the value of the sessionId attribute of the session's config object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "vmware"
                ],
                "description": "Updates the specific VM browse session.",
                "operationId": "putBackupVProxyVmBrowseSessionRequest",
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the protected VM object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backup-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vproxy-mount-session-id",
                        "in": "path",
                        "description": "is the value of the vProxyMountSessionId attribute in the vproxy VM mount job object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vproxy-browse-session-id",
                        "in": "path",
                        "description": "is the value of the sessionId attribute of the session's config object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "VProxyVmBrowseSessionRequest",
                        "description": "The vmbrowse session details to be updated.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "vmware"
                ],
                "description": "Deletes the specific VM browse session.",
                "operationId": "deleteBackupVProxyVmBrowseSession",
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the protected VM object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backup-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vproxy-mount-session-id",
                        "in": "path",
                        "description": "is the value of the vProxyMountSessionId attribute in the vproxy VM mount job object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vproxy-browse-session-id",
                        "in": "path",
                        "description": "is the value of the sessionId attribute of the session's config object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was retrieved successfully."
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}/protectedvms/{vm-uuid}/backups/{backup-id}/op/vmmount/{vproxy-mount-session-id}/vmbrowse/{vproxy-browse-session-id}/contents": {
            "get": {
                "tags": [
                    "vmware"
                ],
                "description": "Returns content of a single vmbrowse session.",
                "operationId": "getBackupVProxyVmBrowseSessionContents",
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the protected VM object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backup-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vproxy-mount-session-id",
                        "in": "path",
                        "description": "is the value of the vProxyMountSessionId attribute in the vproxy VM mount job object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vproxy-browse-session-id",
                        "in": "path",
                        "description": "is the value of the sessionId attribute of the session's config object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/XmlVmBrowseDirectoryContents"
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}/protectedvms/{vm-uuid}/backups/{backup-id}/op/inspectbackup": {
            "post": {
                "tags": [
                    "vmware"
                ],
                "description": "Inspect an app consistent VM backup for purposes of catalog retrieval.",
                "operationId": "postVCenterProtectedVmBackupInspectBackup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the protected VM object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backup-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A job is created. The Job URI can be found in the location header of the response."
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}/protectedvms/{vm-uuid}/backups/{backup-id}/instances/{instance-id}/op/recover": {
            "post": {
                "tags": [
                    "vmware"
                ],
                "description": "Starts a recovery of a selected protected VM backup instance.",
                "operationId": "postVCenterProtectedVmBackupInstanceRecover",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the protected VM object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backup-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "instance-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the instance object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "vmwareVmOpRecover",
                        "description": "Parameters to start the recovery.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VMwareVmOpRecover"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource was created successfully."
                    },
                    "202": {
                        "description": "Accepted."
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}/protectedvms/{vm-uuid}/backups/{backup-id}/instances/{instance-id}/op/vmmount": {
            "post": {
                "tags": [
                    "vmware"
                ],
                "description": "Mounts a selected protected VM backup instance for purposes of FLR.",
                "operationId": "postVCenterProtectedVmBackupInstanceVmMount",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the protected VM object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backup-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "instance-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the instance object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "backupOpVmMount",
                        "description": "Parameters to start the mount.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BackupOpVmMount"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A job is created. The Job URI can be found in the location header of the response."
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}/protectedvms/{vm-uuid}/backups/{backup-id}/instances/{instance-id}/op/vmmount/{vproxy-mount-session-id}": {
            "get": {
                "tags": [
                    "vmware"
                ],
                "description": "Returns the specific mount session.",
                "operationId": "getInstanceVProxyVmMountSessionResponse",
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the protected VM object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backup-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "instance-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the instance object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vproxy-mount-session-id",
                        "in": "path",
                        "description": "is the value of the vProxyMountSessionId attribute in the vproxy VM mount job object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmMountSessionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}/protectedvms/{vm-uuid}/backups/{backup-id}/instances/{instance-id}/op/vmmount/{vproxy-mount-session-id}/vmbrowse": {
            "get": {
                "tags": [
                    "vmware"
                ],
                "description": "Returns a list of all vmbrowse sessions.",
                "operationId": "getInstanceVProxyVmBrowseSessionResponseList",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the protected VM object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backup-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "instance-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the instance object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vproxy-mount-session-id",
                        "in": "path",
                        "description": "is the value of the vProxyMountSessionId attribute in the vproxy VM mount job object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionResponseList"
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "vmware"
                ],
                "description": "Creates a new vmbrowse session.",
                "operationId": "postInstanceVProxyVmBrowseSessionRequest",
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the protected VM object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backup-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "instance-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the instance object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vproxy-mount-session-id",
                        "in": "path",
                        "description": "is the value of the vProxyMountSessionId attribute in the vproxy VM mount job object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "VProxyVmBrowseSessionRequest",
                        "description": "The vmbrowse session details to be created.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource was created successfully.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}/protectedvms/{vm-uuid}/backups/{backup-id}/instances/{instance-id}/op/vmmount/{vproxy-mount-session-id}/vmbrowse/{vproxy-browse-session-id}": {
            "get": {
                "tags": [
                    "vmware"
                ],
                "description": "Returns the specific VM browse session.",
                "operationId": "getInstanceVProxyVmBrowseSessionResponse",
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the protected VM object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backup-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "instance-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the instance object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vproxy-mount-session-id",
                        "in": "path",
                        "description": "is the value of the vProxyMountSessionId attribute in the vproxy VM mount job object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vproxy-browse-session-id",
                        "in": "path",
                        "description": "is the value of the sessionId attribute of the session's config object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "vmware"
                ],
                "description": "Updates the specific VM browse session.",
                "operationId": "putInstanceVProxyVmBrowseSessionRequest",
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the protected VM object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backup-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "instance-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the instance object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vproxy-mount-session-id",
                        "in": "path",
                        "description": "is the value of the vProxyMountSessionId attribute in the vproxy VM mount job object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vproxy-browse-session-id",
                        "in": "path",
                        "description": "is the value of the sessionId attribute of the session's config object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "VProxyVmBrowseSessionRequest",
                        "description": "The vmbrowse session details to be updated.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/VProxyVmBrowseSessionPutOrPostResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "vmware"
                ],
                "description": "Deletes the specific VM browse session.",
                "operationId": "deleteInstanceVProxyVmBrowseSession",
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the protected VM object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backup-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "instance-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the instance object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vproxy-mount-session-id",
                        "in": "path",
                        "description": "is the value of the vProxyMountSessionId attribute in the vproxy VM mount job object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vproxy-browse-session-id",
                        "in": "path",
                        "description": "is the value of the sessionId attribute of the session's config object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was retrieved successfully."
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}/protectedvms/{vm-uuid}/backups/{backup-id}/instances/{instance-id}/op/vmmount/{vproxy-mount-session-id}/vmbrowse/{vproxy-browse-session-id}/contents": {
            "get": {
                "tags": [
                    "vmware"
                ],
                "description": "Returns content of a single vmbrowse session.",
                "operationId": "getInstanceVProxyVmBrowseSessionContents",
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the protected VM object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backup-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "instance-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the instance object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vproxy-mount-session-id",
                        "in": "path",
                        "description": "is the value of the vProxyMountSessionId attribute in the vproxy VM mount job object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vproxy-browse-session-id",
                        "in": "path",
                        "description": "Specifies the ID of the vproxy vm browse session.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/XmlVmBrowseDirectoryContents"
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}/protectedvms/{vm-uuid}/backups/{backup-id}/instances/{instance-id}/op/inspectbackup": {
            "post": {
                "tags": [
                    "vmware"
                ],
                "description": "Inspects an app consistent VM backup instance for catalog retrieval.",
                "operationId": "postVCenterProtectedVmBackupInstanceInspectBackup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the protected VM object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "backup-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the backup object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "instance-id",
                        "in": "path",
                        "description": "is the value of the id attribute in the instance object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A job is created. The Job URI can be found in the location header of the response."
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}/vms": {
            "get": {
                "tags": [
                    "vmware"
                ],
                "description": "Returns a list of VMs for a specific vCenter.",
                "operationId": "getVCenterVms",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/VMwareVmList"
                        }
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}/vms/{vm-uuid}": {
            "get": {
                "tags": [
                    "vmware"
                ],
                "description": "Returns the specific VM for a specific vCenter.",
                "operationId": "getVCenterVm",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the VM object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/VMwareVm"
                        }
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}/vms/{vm-uuid}/op/backup": {
            "post": {
                "tags": [
                    "vmware"
                ],
                "description": "Starts a backup for a specific vC/vms/{vm-uuid}/enter VM.",
                "operationId": "postVMwareVCenterVmOpBackup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the VM object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "vmwareVmOpBackup",
                        "description": "Parameters to start the backup.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VMwareVmOpBackup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A job is created. The Job URI can be found in the location header of the response."
                    }
                }
            }
        },
        "/vmware/vcenters/{vcenter-hostname}/vms/{vm-uuid}/protectiondetails": {
            "get": {
                "tags": [
                    "vmware"
                ],
                "description": "Returns a list of protection details for a specific vCenter VM.",
                "operationId": "getVMwareVCenterVmProtectionDetails",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vcenter-hostname",
                        "in": "path",
                        "description": "is the value of the hostname attribute in the vCenter object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vm-uuid",
                        "in": "path",
                        "description": "is the value of the uuid attribute in the VM object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/VMwareVmProtectionDetailList"
                        }
                    }
                }
            }
        },
        "/vmware/vms": {
            "get": {
                "tags": [
                    "vmware"
                ],
                "description": "Returns a list of active VMs.",
                "operationId": "getVMwareVms",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/VMwareVmList"
                        }
                    }
                }
            }
        },
        "/vmware/vproxies": {
            "get": {
                "tags": [
                    "vmware"
                ],
                "description": "Returns a list of vProxies.",
                "operationId": "getVProxies",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/VProxyList"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "vmware"
                ],
                "description": "Create a vProxy.",
                "operationId": "postVProxy",
                "parameters": [
                    {
                        "name": "vproxy",
                        "in": "body",
                        "description": "vProxy to create",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VProxy"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource was created successfully."
                    },
                    "202": {
                        "description": "Accepted."
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/vmware/vproxies/op/register": {
            "post": {
                "tags": [
                    "vmware"
                ],
                "description": "Create and register a vProxy.",
                "operationId": "postOpRegisterVProxy",
                "parameters": [
                    {
                        "name": "VProxy",
                        "in": "body",
                        "description": "Requst body to create and register a single vProxy",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VProxy"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource was created successfully."
                    },
                    "400": {
                        "description": "Bad request.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/vmware/vproxies/{vproxy-hostname}": {
            "get": {
                "tags": [
                    "vmware"
                ],
                "description": "Returns the specific vProxy.",
                "operationId": "getVProxy",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "vproxy-hostname",
                        "in": "path",
                        "description": "is the value of hostname attribute in the vProxy object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/VProxy"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "vmware"
                ],
                "description": "Deletes the specific vProxy.",
                "operationId": "deleteVProxy",
                "parameters": [
                    {
                        "name": "vproxy-hostname",
                        "in": "path",
                        "description": "is the value of hostname attribute in the vProxy object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was retrieved successfully."
                    }
                }
            },
            "put": {
                "tags": [
                    "vmware"
                ],
                "description": "Updates the specific vProxy.",
                "operationId": "putVProxy",
                "parameters": [
                    {
                        "name": "vproxy-hostname",
                        "in": "path",
                        "description": "is the value of hostname attribute in the vProxy object.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vproxy",
                        "in": "body",
                        "description": "vProxy to modify",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VProxy"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was updated successfully."
                    }
                }
            }
        },
        "/volumes": {
            "get": {
                "tags": [
                    "volumes"
                ],
                "description": "Returns a list of volumes.",
                "operationId": "getVolumes",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Resources were retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/VolumeList"
                        }
                    }
                }
            }
        },
        "/volumes/{volumeId}": {
            "get": {
                "tags": [
                    "volumes"
                ],
                "description": "Returns the specific volume.",
                "operationId": "getVolume",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "volumeId",
                        "in": "path",
                        "description": "is the value of the name attribute in the volume object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource was retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/Volume"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "volumes"
                ],
                "description": "Deletes the specific volume.",
                "operationId": "deleteVolume",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "volumeId",
                        "in": "path",
                        "description": "is the value of the name attribute in the volume object.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource was retrieved successfully."
                    }
                }
            }
        }
    },
    "definitions": {
        "Alert": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "AlertList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "alerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Alert"
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                }
            }
        },
        "Attr": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "AuditLogConfiguration": {
            "type": "object",
            "properties": {
                "administrators": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "auditLogFilePath": {
                    "type": "string"
                },
                "auditLogHostname": {
                    "type": "string"
                },
                "auditLogMaxFileSizeInMB": {
                    "type": "integer",
                    "format": "int32"
                },
                "auditLogMaxFileVersion": {
                    "type": "integer",
                    "format": "int32"
                },
                "auditLogRenderedLocale": {
                    "type": "string"
                },
                "auditLogRenderedService": {
                    "description": "AuditLogRenderedService",
                    "type": "string",
                    "enum": [
                        "None",
                        "Local",
                        "Syslog",
                        "Eventlog"
                    ]
                },
                "auditLogSeverity": {
                    "description": "AuditLogSeverity",
                    "type": "string",
                    "enum": [
                        "Information",
                        "Notice",
                        "Warning",
                        "Error",
                        "Severe",
                        "Critical"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "resourceId": {
                    "$ref": "#/definitions/ResourceId"
                }
            },
            "description": "Audit Log Configuration model"
        },
        "Backup": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Attr"
                    }
                },
                "browseTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "clientHostname": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "completionTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "creationTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "fileCount": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "string"
                },
                "instances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BackupInstance"
                    }
                },
                "level": {
                    "description": "BackupLevel",
                    "type": "string",
                    "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9",
                        "Consolidate",
                        "Full",
                        "Incr",
                        "IncrSynthFull",
                        "Manual",
                        "Migration",
                        "Skip",
                        "SynthFull",
                        "TxnLog"
                    ]
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "name": {
                    "type": "string"
                },
                "retentionTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "saveTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "shortId": {
                    "type": "string"
                },
                "size": {
                    "$ref": "#/definitions/Size"
                },
                "tenant": {
                    "type": "string"
                },
                "type": {
                    "description": "BackupType",
                    "type": "string",
                    "enum": [
                        "CoverSet",
                        "DSA",
                        "File",
                        "NDMP",
                        "Raw",
                        "Snapshot",
                        "Unknown"
                    ]
                },
                "vmInformation": {
                    "$ref": "#/definitions/VMwareVmBackupInfo"
                }
            },
            "description": "Backup model"
        },
        "BackupInstance": {
            "type": "object",
            "properties": {
                "clone": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "status": {
                    "description": "Status",
                    "type": "string",
                    "enum": [
                        "Aborted",
                        "Browsable",
                        "InProgress",
                        "Recoverable",
                        "Recyclable",
                        "Unknown"
                    ]
                },
                "volumeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "description": "Backup Instance model"
        },
        "BackupInstanceList": {
            "type": "object",
            "properties": {
                "backupInstances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BackupInstance"
                    }
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                }
            }
        },
        "BackupList": {
            "type": "object",
            "properties": {
                "backups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Backup"
                    }
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                }
            }
        },
        "BackupOpVmMount": {
            "type": "object",
            "properties": {
                "backupDeviceExportPath": {
                    "type": "string"
                },
                "installFlrAgent": {
                    "type": "boolean"
                },
                "targetVCenterHostname": {
                    "type": "string"
                },
                "targetVmAdminUserId": {
                    "type": "string"
                },
                "targetVmAdminUserPassword": {
                    "type": "string"
                },
                "targetVmMoref": {
                    "type": "string"
                },
                "targetVmName": {
                    "type": "string"
                },
                "targetVmUserId": {
                    "type": "string"
                },
                "targetVmUserPassword": {
                    "type": "string"
                },
                "uninstallFlrAgent": {
                    "type": "boolean"
                },
                "vProxy": {
                    "type": "string"
                }
            }
        },
        "BitRate": {
            "type": "object",
            "properties": {
                "unit": {
                    "description": "BitRate",
                    "type": "string",
                    "enum": [
                        "Byte/s",
                        "KB/s"
                    ]
                },
                "value": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Client": {
            "type": "object",
            "properties": {
                "aliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This is a list of aliases (nicknames) for the client machine that queries can match. If this list is empty, match on client name alone."
                },
                "applicationInformation": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute contains client application information."
                },
                "backupCommand": {
                    "type": "string",
                    "description": "The remote command to run to backup data for this client and save sets. This command can be used to perform pre and post backup processing and defaults to the ''save'' command. The value must not include a path and must start with the prefix ''save'' or ''nsr''."
                },
                "backupType": {
                    "type": "string",
                    "description": "This attribute specifies the client backup type."
                },
                "blockBasedBackup": {
                    "type": "boolean",
                    "default": false,
                    "description": "Select this attribute to enable the image backups. Refer to the NetWorker Administration Guide for additional information about configuring block based backups."
                },
                "checkpointEnabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "This attribute enables the support for checkpoint restart during scheduled backups. The save program performs a backup in an ordered manner and keeps track of the files saved. If save fails, it can be restarted from the point of interruption (file or directory). The ordering of the filesystems during backup may cause performance impact."
                },
                "clientId": {
                    "type": "string",
                    "description": "This attribute is the client's identifier and cannot be changed."
                },
                "clientDirectEnabled": {
                    "type": "boolean",
                    "description": "This attribute indicates if this client is enabled to bypass the storage node and write directly to the target disk device during a scheduled backup of the client."
                },
                "comment": {
                    "type": "string",
                    "description": "This attribute specifies any user-defined description of this client or other explanatory remarks."
                },
                "dataDomainBackup": {
                    "type": "boolean",
                    "description": "This attribute specifies whether the backup destination for this client is a Data Domain device."
                },
                "dataDomainInterface": {
                    "type": "string",
                    "description": "This attribute specifies the client interface over which a Client Direct backup to a Data Domain device should occur. This attribute has two values, IP and Fibre Channel. The default value is IP. This attribute has meaning only when the Data Domain Backup and Client Direct attributes are enabled.",
                    "enum": [
                        "Any",
                        "IP",
                        "Fibre Channel"
                    ]
                },
                "directive": {
                    "type": "string",
                    "description": "Directives tell the client how to back up certain files. The choices are defined by the set of existing directives."
                },
                "executablePath": {
                    "type": "string",
                    "description": "The path to the NSR executables on this client."
                },
                "hostname": {
                    "type": "string",
                    "description": "This attribute is the hostname of the NSR client."
                },
                "indexBackupContent": {
                    "type": "boolean",
                    "default": false,
                    "description": "This attribute specifies index files and directories on the snapshot."
                },
                "jobControl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute is intended to be used with custom backup scripts. It controls how savegrp and nsrjobd interpret the end of a job and its status."
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "nasDevice": {
                    "type": "boolean",
                    "default": false,
                    "description": "Indicates client is a NAS device."
                },
                "nasDeviceManagementName": {
                    "type": "string",
                    "description": "In NAS device configurations, the management name of the device."
                },
                "nasFileAccessPassword": {
                    "type": "string",
                    "description": "This password is used to access the file services on a NAS device. If a password is specified, then the NAS file server user attribute for the client resource must also be defined. Each instance of a client can have a different password. This field is only used with Windows clients. This field is ignored with other client types."
                },
                "nasFileAccessUser": {
                    "type": "string",
                    "description": "This user accesses the file services on a NAS device. Each instance of a client can have a different value for the NAS management user. This field is only used with Windows clients. This field is ignored with other client types."
                },
                "nasManagementPassword": {
                    "type": "string",
                    "description": "This password is used to perform management actions on a NAS device. If a password is given, then the ''NAS management user'' attribute for the client resource must also be defined. Each instance of a client can have a different password."
                },
                "nasManagementUser": {
                    "type": "string",
                    "description": "The user as which to run remote management commands on this NAS device. Each instance of a client can have a different value for the ''NAS management user''."
                },
                "ndmp": {
                    "type": "boolean",
                    "default": false,
                    "description": "Indicates client is a NDMP client."
                },
                "ndmpArrayName": {
                    "type": "string",
                    "description": "In NDMP NAS array configurations, the logical name assigned to the array."
                },
                "ndmpMultiStreamsEnabled": {
                    "type": "boolean"
                },
                "ndmpVendorInformation": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "This attribute contains NDMP client vendor information."
                    }
                },
                "networkerVersion": {
                    "type": "string",
                    "description": "This attribute contains the NetWorker version that is running on the client machine. By default, this field is blank. This attribute is updated when the backup is performed."
                },
                "parallelSaveStreamsPerSaveSet": {
                    "type": "boolean",
                    "default": false,
                    "description": "Parallel save streams per save set - Enable parallel save streams per client resource save set during scheduled backup. Large save set backup time could be significantly reduced. Each save set will be backed up with four parallel save streams by default. The default four can be changed by setting the ''PSS:streams_per_ss'' parameter in the client's save operations attribute. For example, ''PSS:streams_per_ss=1,*, 2,/data[1-3], 8,/data[45]'' will use one stream per UNIX client save set entry by default but two streams for each of /data1, /data2 & /data3 and eight streams for each of /data4 & /data5. Client-supported wildcard characters can be used. The total number of active streams from all save sets at any one point in time will not exceed the client's parallelism, which is recommended to be a multiple of the default four or the largest ''PSS:streams_per_ss'' integer value if set."
                },
                "parallelism": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of save sets to run in parallel."
                },
                "password": {
                    "type": "string",
                    "description": "The commands save and savefs use the password to gain access to the files being backed up, and other backup commands may use it to access application data. If a password is given, then the remote user attribute for the client resource must also be defined. This attribute is not used for UNIX file system clients. Each instance of a client can have a different password."
                },
                "pool": {
                    "type": "string",
                    "description": "This attribute specifies the media pool used for data target selection during a scheduled backup of the save sets specified in this client."
                },
                "postCommand": {
                    "type": "string",
                    "description": "The command that is specified here runs after the save sets are completed for this client. The value must not include a path and must start with the prefix 'save' or 'nsr'."
                },
                "preCommand": {
                    "type": "string",
                    "description": "The command that is specified here runs before the save sets for this client. The value must not include a path and must start with the prefix 'save' or 'nsr'."
                },
                "probeResourceName": {
                    "type": "string",
                    "description": "Probe resource name."
                },
                "protectionGroups": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "description": "The groups of this client for workflow runs. The choices are defined by the set of existing groups."
                    }
                },
                "remoteAccessUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of remote users that are allowed to recover this client's files. If empty, only users logged into this machine are valid. Examples: sam@jupiter or user=sam,host=jupiter (user sam on machine jupiter), group=wheel,host=jupiter (any user in group wheel on host jupiter), jupiter or host=jupiter (any user on machine jupiter). Warning: If using the Restricted Data Zones feature it is possible to give access to someone not explicitly in the associated Restricted Data Zone. Use caution with wildcard characters."
                },
                "remoteUser": {
                    "type": "string",
                    "description": "The user that runs remote commands on this client or accesses the application-specific data. Each instance of a client can have a different value for the 'remote user'."
                },
                "resourceId": {
                    "$ref": "#/definitions/ResourceId"
                },
                "retentionPolicy": {
                    "type": "string",
                    "description": "Retention setting for client resource."
                },
                "saveOperations": {
                    "type": "string",
                    "description": "This attribute specifies the save operation instructions in the format: KEYWORD:TOKEN=STATE[;KEYWORD:TOKEN=STATE;...]. This attribute is required if save set attribute of this client contains non-ASCII names. This attribute can also be used to configure VSS saves on the Windows OS."
                },
                "saveSets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the save sets to be backed up for this client with this schedule."
                },
                "schedule": {
                    "type": "string",
                    "description": "Backup schedule for client resource."
                },
                "scheduledBackup": {
                    "type": "boolean",
                    "default": false,
                    "description": "This attribute indicates if this client is enabled for scheduled backups."
                },
                "serverNetworkInterface": {
                    "type": "string",
                    "description": "This attribute specifies the name of the network interface on the server to be used for saves and recoveries."
                },
                "storageNodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An ordered list of storage nodes for the client to use when saving its data."
                },
                "storageReplicationPolicyName": {
                    "type": "string",
                    "description": "The storage replication policy used during backup."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute contains tags for the clients."
                },
                "tenant": {
                    "type": "string",
                    "description": "The Restricted Data Zone this resource belongs to if it belongs to one."
                }
            },
            "description": "Client model"
        },
        "ClientList": {
            "type": "object",
            "properties": {
                "clients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Client"
                    }
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                }
            }
        },
        "ClientOpBackup": {
            "type": "object",
            "properties": {
                "actionOverrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PolicyActionSettingOverride"
                    }
                },
                "policy": {
                    "type": "string"
                },
                "workflow": {
                    "type": "string"
                }
            },
            "description": "Client backup operation model."
        },
        "Device": {
            "type": "object",
            "properties": {
                "autoMediaManagement": {
                    "type": "boolean"
                },
                "cdi": {
                    "description": "CDI",
                    "type": "string",
                    "enum": [
                        "NotUsed",
                        "SCSI"
                    ]
                },
                "cleaningInterval": {
                    "type": "string"
                },
                "cleaningRequired": {
                    "type": "boolean"
                },
                "cloudBandwidthThrottlingSettings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cloudBandwithThrottlingEnabled": {
                    "type": "boolean"
                },
                "cloudCACertificate": {
                    "type": "string"
                },
                "cloudCompression": {
                    "description": "CloudCompression",
                    "type": "string",
                    "enum": [
                        "None",
                        "SpeedVerySlow",
                        "SpeedSlow",
                        "SpeedMedium",
                        "SpeedFast"
                    ]
                },
                "cloudEncryption": {
                    "description": "CloudEncryption",
                    "type": "string",
                    "enum": [
                        "None",
                        "AES256"
                    ]
                },
                "cloudNetworkFailureRetryInMin": {
                    "type": "integer",
                    "format": "int32"
                },
                "cloudNumberOfRetries": {
                    "type": "integer",
                    "format": "int32"
                },
                "cloudServer": {
                    "type": "string"
                },
                "cloudTimeout": {
                    "type": "integer",
                    "format": "int32"
                },
                "cloudWriteSizeInKB": {
                    "type": "integer",
                    "format": "int32"
                },
                "comment": {
                    "type": "string"
                },
                "dataDomainFibreChannel": {
                    "type": "boolean"
                },
                "dataDomainFibreChannelHostname": {
                    "type": "string"
                },
                "dataDomainHost": {
                    "type": "string"
                },
                "dataDomainRetentionLockMode": {
                    "description": "This attribute enables or disables the Data Domain retention lock.",
                    "type": "string",
                    "enum": [
                        "None",
                        "Governance",
                        "Compliance"
                    ]
                },
                "dataDomainRetentionLockPeriodMin": {
                    "type": "string"
                },
                "dataDomainRetentionLockPeriodMax": {
                    "type": "string"
                },
                "dateLastCleaned": {
                    "type": "string",
                    "format": "date-time"
                },
                "description": {
                    "type": "string"
                },
                "deviceAccessInfo": {
                    "type": "string"
                },
                "deviceSerialNumber": {
                    "type": "string"
                },
                "dltWormCapable": {
                    "type": "boolean"
                },
                "hardwareId": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "maxNsrmmdCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "maxSession": {
                    "type": "integer",
                    "format": "int32"
                },
                "mediaFamily": {
                    "description": "MediaFamily",
                    "type": "string",
                    "enum": [
                        "Tape",
                        "Disk",
                        "Cloud",
                        "Logical"
                    ]
                },
                "mediaType": {
                    "description": "MediaType",
                    "type": "string",
                    "enum": [
                        "Data Domain",
                        "DD Cloud Tier",
                        "protectpoint",
                        "objstr",
                        "Atmos COS",
                        "adv_file",
                        "Cloud Boost",
                        "file",
                        "logical",
                        "Auto Detected",
                        "LTO Ultrium-8",
                        "LTO Ultrium-7",
                        "LTO Ultrium-6",
                        "LTO Ultrium-5",
                        "LTO Ultrium-4",
                        "LTO Ultrium-3",
                        "LTO Ultrium-2",
                        "LTO Ultrium",
                        "LTO Accelis",
                        "TS1140",
                        "TS1130",
                        "TS1120",
                        "T10000D",
                        "T10000C",
                        "T10000B",
                        "T10000",
                        "9940B",
                        "9940",
                        "9840D",
                        "9840C",
                        "9840b",
                        "9840",
                        "9490",
                        "4890",
                        "3592",
                        "3590",
                        "3570",
                        "3480",
                        "optical",
                        "dtf2",
                        "dtf",
                        "dst",
                        "dst (NT)",
                        "VXA-320",
                        "VXA-172",
                        "VXA-2",
                        "VXA",
                        "sdlt600",
                        "sdlt320",
                        "sdlt",
                        "dlt-v4",
                        "dlt-s4",
                        "dlt 20GB",
                        "dlt vs160",
                        "dlt8000",
                        "dlt7000",
                        "dlt1",
                        "dlt",
                        "tzs20",
                        "tz90",
                        "tz89",
                        "tz88",
                        "tz87",
                        "tz86",
                        "tz85",
                        "tkz90",
                        "tk70",
                        "tk50",
                        "4mm DAT160",
                        "4mm DAT72",
                        "4mm 20GB",
                        "4mm 12GB",
                        "4mm 8GB",
                        "4mm 4GB",
                        "4mm",
                        "8mm Mammoth-3",
                        "8mm Mammoth-2",
                        "SAIT-2",
                        "SAIT-1",
                        "8mm AIT-5",
                        "8mm AIT-4",
                        "8mm AIT-3",
                        "8mm AIT-2",
                        "8mm AIT",
                        "8mm 20GB",
                        "8mm 7GB",
                        "8mm 5GB",
                        "8mm",
                        "SD3",
                        "SLR",
                        "qic",
                        "travan10",
                        "generic256",
                        "generic128",
                        "generic",
                        "CentricStor",
                        "vhs",
                        "himt"
                    ]
                },
                "message": {
                    "type": "string"
                },
                "mountedVolume": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ndmp": {
                    "type": "boolean"
                },
                "parentJukebox": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "pathId": {
                    "type": "string"
                },
                "readOnly": {
                    "type": "boolean"
                },
                "remoteUser": {
                    "type": "string"
                },
                "resourceId": {
                    "$ref": "#/definitions/ResourceId"
                },
                "status": {
                    "description": "Status",
                    "type": "string",
                    "enum": [
                        "Enabled",
                        "Disabled",
                        "Service"
                    ]
                },
                "suspectedDevice": {
                    "type": "boolean"
                },
                "tapeAlertsWarning": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tapeAlertsCritical": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tapeAlertsInformation": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "targetSession": {
                    "type": "integer",
                    "format": "int32"
                },
                "tenant": {
                    "type": "string"
                },
                "verifyLabelOnEject": {
                    "type": "boolean"
                },
                "volumeId": {
                    "type": "string"
                },
                "volumePool": {
                    "type": "string"
                },
                "warnOnSuspectVolumesInPercent": {
                    "type": "integer",
                    "format": "int32"
                },
                "wormCapable": {
                    "type": "boolean"
                },
                "wormCartridgePresent": {
                    "type": "boolean"
                },
                "writeEnabled": {
                    "type": "boolean"
                }
            }
        },
        "DeviceList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Device"
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                }
            }
        },
        "DeviceOpLabel": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "string"
                },
                "labelWithoutMount": {
                    "type": "boolean"
                },
                "manualRecycleOnly": {
                    "type": "boolean"
                },
                "pool": {
                    "type": "string"
                },
                "relabel": {
                    "type": "boolean"
                },
                "verifyUnlabeledVolume": {
                    "type": "boolean"
                },
                "volumeLabel": {
                    "type": "string"
                }
            }
        },
        "DeviceOpMount": {
            "type": "object",
            "properties": {
                "volume": {
                    "type": "string"
                },
                "writeEnabled": {
                    "type": "boolean"
                }
            }
        },
        "DeviceOpStatus": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "operation": {
                    "description": "Operation",
                    "type": "string",
                    "enum": [
                        "Unmount",
                        "Mount",
                        "VerifyLabel",
                        "Label",
                        "LabelWithoutMount",
                        "Eject",
                        "VerifyWriteTime",
                        "MonitorDevice",
                        "RecoverSpace",
                        "CheckFileSystem",
                        "Check",
                        "Erase",
                        "CheckMedia"
                    ]
                },
                "operationInProgress": {
                    "type": "boolean"
                },
                "resourceId": {
                    "$ref": "#/definitions/ResourceId"
                },
                "volumeLabel": {
                    "type": "string"
                }
            }
        },
        "Directive": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "directive": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "name": {
                    "type": "string"
                },
                "resourceId": {
                    "$ref": "#/definitions/ResourceId"
                },
                "tenant": {
                    "type": "string"
                }
            }
        },
        "DirectiveList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "directives": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Directive"
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/HttpStatus"
                },
                "timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "userAgentRequest": {
                    "$ref": "#/definitions/HttpRequest"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "HttpHeader": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "HttpRequest": {
            "type": "object",
            "properties": {
                "contentLength": {
                    "type": "integer",
                    "format": "int64"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HttpHeader"
                    }
                },
                "method": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "HttpStatus": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "codeClass": {
                    "type": "string"
                },
                "reasonPhrase": {
                    "type": "string"
                }
            }
        },
        "Index": {
            "type": "object",
            "properties": {
                "clientFileId": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "fileSizeInBytes": {
                    "type": "integer",
                    "format": "int64"
                },
                "namespace": {
                    "type": "string",
                    "enum": [
                        "backup",
                        "migrated",
                        "archive",
                        "nsr",
                        "ccmail",
                        "informix",
                        "msexch",
                        "msmail",
                        "mssql",
                        "notes",
                        "sapmssql",
                        "saporacle",
                        "saphana",
                        "sybase",
                        "db2",
                        "mysql",
                        "oracle",
                        "nmcasa",
                        "actdir",
                        "medi",
                        "MOSS",
                        "bbb",
                        "nmm",
                        "nmm_bbb",
                        "msapp_pp",
                        "msapp_bbb",
                        "fsagent",
                        "fsagent_scan",
                        "iq",
                        "msvmapp"
                    ]
                },
                "offset": {
                    "type": "integer",
                    "format": "int64"
                },
                "saveTime": {
                    "description": "Save time in UTC format.",
                    "type": "string"
                }
            }
        },
        "IndexList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Index"
                    }
                }
            }
        },
        "CloudboostAppliance": {
            "type": "object",
            "properties": {
                "host": {
                    "description": "Specifies the cloudboost hostname.",
                    "type": "string"
                },
                "name": {
                    "description": "Specifies the cloudboost name.",
                    "type": "string"
                },
                "username": {
                    "description": "Specifies the username used to connect to cloudboost appliance.",
                    "type": "string"
                },
                "password": {
                    "description": "Specifies the password used to connect to cloudboost appliance.",
                    "type": "string"
                },
                "resourceId": {
                    "$ref": "#/definitions/ResourceId"
                }
            }
        },
        "CloudboostApplianceList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "cloudBoostAppliances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CloudboostAppliance"
                    }
                }
            }
        },
        "VCenterPlugin": {
            "type": "object",
            "properties": {
                "pluginType": {
                    "description": "Specifies the type of plugin to install.",
                    "type": "string",
                    "enum": [
                        "VC",
                        "EBR"
                    ]
                },
                "nwUserId": {
                    "description": "Specifies the NetWorker adminstrator username used to connect to VC or EBR REST API's.",
                    "type": "string"
                },
                "nwPassword": {
                    "description": "Specifies the NetWorker administrator password used to connect to VC or EBR REST API's.",
                    "type": "string"
                },
                "httpsPort": {
                    "description": "Specifies the vCenter https port number, the default value is 443.",
                    "type": "integer"
                },
                "httpPort": {
                    "description": "Specifies the vCenter http port number, the default value is 80.",
                    "type": "integer"
                },
                "authcIp": {
                    "description": "Specifies the authc ip or hostname.",
                    "type": "string"
                },
                "authcPort": {
                    "description": "Specifies the authc port number.",
                    "type": "integer"
                }
            }
        },
        "Job": {
            "type": "object",
            "properties": {
                "adhocJob": {
                    "type": "boolean"
                },
                "clientHostname": {
                    "type": "string"
                },
                "command": {
                    "type": "string"
                },
                "completionStatus": {
                    "description": "CompletionStatus",
                    "type": "string",
                    "enum": [
                        "Unknown",
                        "NoStart",
                        "Succeeded",
                        "Failed",
                        "Cancelled",
                        "Abandoned",
                        "MissedTheSchedule"
                    ]
                },
                "dataSize": {
                    "$ref": "#/definitions/Size"
                },
                "dependentJobIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "endTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "exitCode": {
                    "type": "integer",
                    "format": "int64"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "itemCount": {
                    "type": "integer",
                    "format": "int64"
                },
                "itemIdLong": {
                    "type": "integer"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "logFile": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ndmp": {
                    "type": "boolean"
                },
                "parentJobId": {
                    "type": "integer",
                    "format": "int64"
                },
                "previousJobId": {
                    "type": "integer",
                    "format": "int64"
                },
                "progress": {
                    "type": "string"
                },
                "recoverAppItemStatus": {
                    "type": "string"
                },
                "rootParentJobId": {
                    "type": "integer",
                    "format": "int64"
                },
                "runOnHost": {
                    "type": "string"
                },
                "saveSetId": {
                    "type": "string"
                },
                "siblingJobIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "state": {
                    "description": "JobState",
                    "type": "string",
                    "enum": [
                        "Unknown",
                        "Created",
                        "Queued",
                        "Started",
                        "Active",
                        "SessionActive",
                        "Cancelled",
                        "Completed"
                    ]
                },
                "stopped": {
                    "type": "boolean"
                },
                "tenant": {
                    "type": "string"
                },
                "terminationReason": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "missedClients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "disabledClients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "completionReport": {
                    "type": "string"
                },
                "vProxyErrorMessages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vProxyFlrAgentInstallRequired": {
                    "type": "boolean"
                },
                "vProxyHostname": {
                    "type": "string"
                },
                "vProxyMountSessionId": {
                    "type": "string"
                },
                "vProxyMountState": {
                    "type": "string"
                },
                "vProxyMountTargetVmInvalidAdminUser": {
                    "type": "boolean"
                },
                "vProxyMountTargetVmInvalidUser": {
                    "type": "boolean"
                },
                "vProxyMountTargetVmMoref": {
                    "type": "string"
                },
                "vProxyMountTargetVmName": {
                    "type": "string"
                },
                "vProxyMountTargetVmUserId": {
                    "type": "string"
                },
                "vProxyMountVCenterHostname": {
                    "type": "string"
                },
                "vProxyInspectDescriptor": {
                    "type": "string"
                },
                "vProxyRecoverSessionId": {
                    "type": "string"
                }
            }
        },
        "JobIndication": {
            "type": "object",
            "properties": {
                "catalogId": {
                    "type": "string"
                },
                "jobId": {
                    "type": "integer",
                    "format": "int64"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "message": {
                    "type": "string"
                },
                "messageCatalogNumber": {
                    "type": "string"
                },
                "messageId": {
                    "type": "string"
                },
                "originComponent": {
                    "type": "string"
                },
                "severity": {
                    "description": "JobIndicationSeverity",
                    "type": "string",
                    "enum": [
                        "Invalid",
                        "Debug",
                        "Information",
                        "Notice",
                        "Warning",
                        "Intervention",
                        "Error",
                        "Severe",
                        "Critical",
                        "Alert",
                        "Emergency"
                    ]
                },
                "tenant": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "JobIndicationList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "jobIndications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/JobIndication"
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                }
            }
        },
        "JobList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Job"
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                }
            }
        },
        "JobOpCancel": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string"
                },
                "timeoutInSec": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Label": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "name": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "resourceId": {
                    "$ref": "#/definitions/ResourceId"
                },
                "separator": {
                    "description": "LabelSeparator",
                    "type": "string",
                    "enum": [
                        ".",
                        "_",
                        ":",
                        "-"
                    ]
                },
                "tenant": {
                    "type": "string"
                }
            }
        },
        "LabelList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Label"
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                }
            }
        },
        "License": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Specifies name of the license."
                },
                "comment": {
                    "type": "string",
                    "description": "Specifies comment of the license."
                },
                "enablerCode": {
                    "description": "An enabler code is a unique code that activates the software, also called an enabler key or license enabler.",
                    "type": "string"
                },
                "hostId": {
                    "type": "string",
                    "description": "Specifies host identifier of the license."
                },
                "expirationDate": {
                    "type": "string",
                    "description": "Specifies expiration date of the license."
                },
                "authCode": {
                    "description": "An authorization code is a unique code that in combination with an associated enabler code unlocks the software for permanent use on a specific host computer.",
                    "type": "string"
                },
                "licenseType": {
                    "type": "string",
                    "description": "Specifies type of the license."
                },
                "resourceId": {
                    "$ref": "#/definitions/ResourceId"
                }
            }
        },
        "LicenseList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "licenses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/License"
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                }
            }
        },
        "Link": {
            "type": "object",
            "properties": {
                "href": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "rel": {
                    "type": "string",
                    "enum": [
                        "create-form",
                        "item",
                        "related"
                    ]
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "Notification": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "additionalEmailRecipient": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "description": "Event",
                        "type": "string",
                        "enum": [
                            "Media",
                            "Index",
                            "Server",
                            "Registration",
                            "DeviceCleaned",
                            "DeviceCleaningRequired",
                            "CleaningCartridgeRequired",
                            "CleaningCartridgeExpired",
                            "DeviceDisabled",
                            "DeletedMedia",
                            "WriteCompletion",
                            "AdvFile",
                            "DataDomain",
                            "StorageNode",
                            "MediaCapacity",
                            "MediaRequest",
                            "ResourceFile",
                            "NetWorkerDaemons",
                            "LicenseExpiration",
                            "Client",
                            "DeviceDisabled2",
                            "BusDeviceReset",
                            "DeviceOrderingIssueDetect",
                            "TaskManager",
                            "Hypervisor",
                            "VolumeScanNeeded",
                            "ProtectionPolicy",
                            "ProtectionPolicyFailure"
                        ]
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "name": {
                    "type": "string"
                },
                "priorities": {
                    "type": "array",
                    "items": {
                        "description": "Priority",
                        "type": "string",
                        "enum": [
                            "Info",
                            "Notice",
                            "Warning",
                            "Waiting",
                            "Critical",
                            "Alert",
                            "Emergency"
                        ]
                    }
                },
                "resourceId": {
                    "$ref": "#/definitions/ResourceId"
                }
            }
        },
        "NotificationList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Notification"
                    }
                }
            }
        },
        "Policy": {
            "type": "object",
            "properties": {
                "allowManualSaves": {
                    "type": "boolean"
                },
                "applyEntireWorkflow": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "name": {
                    "type": "string"
                },
                "resourceId": {
                    "$ref": "#/definitions/ResourceId"
                },
                "summaryNotification": {
                    "$ref": "#/definitions/PolicyNotification"
                },
                "policyProtectionEnable": {
                    "type": "boolean"
                },
                "policyProtectionPeriod": {
                    "type": "string"
                },
                "tenant": {
                    "type": "string"
                },
                "workflows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PolicyWorkflow"
                    }
                }
            }
        },
        "PolicyAction": {
            "type": "object",
            "properties": {
                "actionSpecificData": {
                    "$ref": "#/definitions/PolicyActionSpecificData"
                },
                "actionStartTime": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "completionNotification": {
                    "$ref": "#/definitions/PolicyNotification"
                },
                "concurrent": {
                    "type": "boolean"
                },
                "customTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "drivenBy": {
                    "type": "string"
                },
                "disableActionStartTime": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "failureImpact": {
                    "description": "PolicyActionFailureImpact",
                    "type": "string",
                    "enum": [
                        "Continue",
                        "AbortAction",
                        "AbortWorkflow"
                    ]
                },
                "hardLimit": {
                    "type": "string"
                },
                "inactivityTimeoutInMin": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "newName": {
                    "type": "string"
                },
                "parallelism": {
                    "type": "integer",
                    "format": "int32"
                },
                "retries": {
                    "type": "integer",
                    "format": "int32"
                },
                "retryDelayInSec": {
                    "type": "integer",
                    "format": "int32"
                },
                "scheduleActivities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scheduleComment": {
                    "type": "string"
                },
                "scheduleOverrides": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "schedulePeriod": {
                    "description": "SchedulePeriod",
                    "type": "string",
                    "enum": [
                        "Week",
                        "Month"
                    ]
                },
                "softLimit": {
                    "type": "string"
                },
                "workItemFilter": {
                    "$ref": "#/definitions/PolicyActionWorkItemFilter"
                }
            }
        },
        "PolicyActionSpecificData": {
            "description": "One and only one of those properties can be present at any time",
            "type": "object",
            "properties": {
                "backup": {
                    "$ref": "#/definitions/PolicyActionBackup"
                },
                "testConnectivity": {
                    "$ref": "#/definitions/PolicyActionCheckConnectivity"
                },
                "clone": {
                    "$ref": "#/definitions/PolicyActionClone"
                },
                "discover": {
                    "$ref": "#/definitions/PolicyActionDiscover"
                },
                "expire": {
                    "$ref": "#/definitions/PolicyActionExpire"
                },
                "generateIndex": {
                    "$ref": "#/definitions/PolicyActionGenerateIndex"
                },
                "probe": {
                    "$ref": "#/definitions/PolicyActionProbe"
                },
                "serverBackup": {
                    "$ref": "#/definitions/PolicyActionServerBackup"
                },
                "vbaCheckpointBackup": {
                    "$ref": "#/definitions/PolicyActionVbaCheckpointBackup"
                },
                "vbaCheckpointDiscover": {
                    "$ref": "#/definitions/PolicyActionVbaCheckpointDiscover"
                }
            }
        },
        "PolicyActionBackup": {
            "type": "object",
            "properties": {
                "backupSpecificData": {
                    "$ref": "#/definitions/PolicyActionBackupSpecificData"
                },
                "clientOverride": {
                    "description": "PolicyActionClientOverrideType",
                    "type": "string",
                    "enum": [
                        "ClientCanNotOverride",
                        "ClientCanOverride",
                        "LegacyBackupRules"
                    ]
                },
                "destinationStorageNodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "overrideBackupSchedule": {
                    "type": "boolean"
                },
                "overrideRetentionPeriod": {
                    "type": "boolean"
                },
                "retentionPeriod": {
                    "type": "string"
                },
                "successThreshold": {
                    "description": "PolicySuccessThreshold",
                    "type": "string",
                    "enum": [
                        "Warning",
                        "Success"
                    ]
                }
            }
        },
        "PolicyActionBackupSpecificData": {
            "description": "One and only one of those properties can be present at any time",
            "type": "object",
            "properties": {
                "snapshot": {
                    "$ref": "#/definitions/PolicyActionBackupSnapshot"
                },
                "traditional": {
                    "$ref": "#/definitions/PolicyActionBackupTraditional"
                },
                "vmware": {
                    "$ref": "#/definitions/PolicyActionBackupVMwareVba"
                },
                "vmwareVProxy": {
                    "$ref": "#/definitions/PolicyActionBackupVMwareVProxy"
                }
            }
        },
        "PolicyActionBackupSnapshot": {
            "type": "object",
            "properties": {
                "destinationPool": {
                    "type": "string"
                },
                "forceBackupLevel": {
                    "type": "string"
                },
                "minimumRetentionPeriod": {
                    "type": "string"
                }
            }
        },
        "PolicyActionBackupTraditional": {
            "type": "object",
            "properties": {
                "enableDDRetentionLock": {
                    "type": "boolean"
                },
                "ddRetentionLockTime": {
                    "type": "string"
                },
                "destinationPool": {
                    "type": "string"
                },
                "estimate": {
                    "type": "boolean"
                },
                "forceBackupLevel": {
                    "type": "string"
                },
                "fileInactivityAlertThresholdPercentage": {
                    "type": "integer",
                    "format": "int32"
                },
                "fileInactivityThresholdInDays": {
                    "type": "integer",
                    "format": "int32"
                },
                "revertToFullWhenSyntheticFullFails": {
                    "type": "boolean"
                },
                "timestampFormat": {
                    "description": "PolicyTimestampFormat",
                    "type": "string",
                    "enum": [
                        "None",
                        "ISO",
                        "Unix"
                    ]
                },
                "verifySyntheticFull": {
                    "type": "boolean"
                }
            }
        },
        "PolicyActionBackupVMwareVba": {
            "type": "object",
            "properties": {
                "destinationPool": {
                    "type": "string"
                },
                "saveType": {
                    "description": "PolicyVbaSaveType",
                    "type": "string",
                    "enum": [
                        "VMDK",
                        "VirtualMachine"
                    ]
                },
                "useVbaInternalStorage": {
                    "type": "boolean"
                },
                "vbaName": {
                    "type": "string"
                }
            }
        },
        "PolicyActionBackupVMwareVProxy": {
            "type": "object",
            "properties": {
                "destinationPool": {
                    "type": "string"
                },
                "proxyName": {
                    "type": "string"
                },
                "appConsistentQuiesce": {
                    "type": "string",
                    "enum": [
                        "Basic",
                        "Advanced",
                        "None"
                    ]
                },
                "transactionLogBackup": {
                    "type": "boolean"
                },
                "quiesceTimeoutInMinutes": {
                    "type": "integer"
                },
                "quiesceSystemAdminUsername": {
                    "type": "string"
                },
                "quiesceSystemAdminPassword": {
                    "type": "string"
                },
                "enableDDRetentionLock": {
                    "type": "boolean"
                },
                "ddRetentionLockTime": {
                    "type": "string"
                }
            }
        },
        "PolicyActionCheckConnectivity": {
            "type": "object",
            "properties": {}
        },
        "PolicyActionClone": {
            "type": "object",
            "properties": {
                "enableDDRetentionLock": {
                    "type": "boolean"
                },
                "ddRetentionLockTime": {
                    "type": "string"
                },
                "deleteSource": {
                    "type": "boolean"
                },
                "destinationPool": {
                    "type": "string"
                },
                "destinationStorageNode": {
                    "type": "string"
                },
                "retentionPeriod": {
                    "type": "string"
                },
                "sourceStorageNode": {
                    "type": "string"
                }
            }
        },
        "PolicyActionDiscover": {
            "type": "object",
            "properties": {
                "discoverType": {
                    "description": "DiscoverType",
                    "type": "string",
                    "enum": [
                        "NAS snapshot"
                    ]
                }
            }
        },
        "PolicyActionExpire": {
            "type": "object",
            "properties": {}
        },
        "PolicyActionGenerateIndex": {
            "type": "object",
            "properties": {
                "generateIndexType": {
                    "description": "GenerateIndexType",
                    "type": "string",
                    "enum": [
                        "NAS snapshot"
                    ]
                }
            }
        },
        "PolicyActionProbe": {
            "type": "object",
            "properties": {
                "allProbsMustSucceed": {
                    "type": "boolean"
                },
                "maxBackupIntervalInDays": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "PolicyActionServerBackup": {
            "type": "object",
            "properties": {
                "destinationPool": {
                    "type": "string"
                },
                "destinationStorageNode": {
                    "type": "string"
                },
                "performBootstrap": {
                    "type": "boolean"
                },
                "performClientFileIndexing": {
                    "type": "boolean"
                },
                "retentionPeriod": {
                    "type": "string"
                }
            }
        },
        "PolicyActionSettingOverride": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "commandLineArguments": {
                    "type": "string"
                }
            },
            "required": [
                "action",
                "commandLineArguments"
            ]
        },
        "PolicyActionVbaCheckpointBackup": {
            "type": "object",
            "properties": {
                "destinationPool": {
                    "type": "string"
                },
                "retentionPeriod": {
                    "type": "string"
                }
            }
        },
        "PolicyActionVbaCheckpointDiscover": {
            "type": "object",
            "properties": {}
        },
        "PolicyActionWorkItemFilter": {
            "type": "object",
            "properties": {
                "clients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "levels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "saveSetTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timeRangeEnd": {
                    "type": "string",
                    "format": "date-time"
                },
                "timeRangeStart": {
                    "type": "string",
                    "format": "date-time"
                },
                "excludeClient": {
                    "type": "string",
                    "enum": [
                        "true",
                        "false",
                        "none"
                    ]
                },
                "excludeLevel": {
                    "type": "string",
                    "enum": [
                        "true",
                        "false",
                        "none"
                    ]
                },
                "excludeTimeRange": {
                    "type": "string",
                    "enum": [
                        "true",
                        "false",
                        "none"
                    ]
                },
                "excludeSaveSetType": {
                    "type": "string",
                    "enum": [
                        "true",
                        "false",
                        "none"
                    ]
                }
            }
        },
        "PolicyList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "protectionPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Policy"
                    }
                }
            }
        },
        "PolicyNotification": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "executeOn": {
                    "description": "PolicyNotificationTrigger",
                    "type": "string",
                    "enum": [
                        "Completion",
                        "Failure",
                        "Ignore"
                    ]
                }
            }
        },
        "PolicyWorkflow": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PolicyAction"
                    }
                },
                "autoStartEnabled": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                },
                "completionNotification": {
                    "$ref": "#/definitions/PolicyNotification"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "endTime": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "name": {
                    "type": "string"
                },
                "newName": {
                    "type": "string"
                },
                "nextStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "protectionGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "restartTimeWindow": {
                    "type": "string"
                },
                "startInterval": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                }
            }
        },
        "PolicyWorkflowList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "workflows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PolicyWorkflow"
                    }
                }
            }
        },
        "PolicyWorkflowOpBackup": {
            "type": "object",
            "properties": {
                "actionOverrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PolicyActionSettingOverride"
                    }
                },
                "clients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "restart": {
                    "type": "boolean"
                },
                "vmwareWorkItemSelection": {
                    "$ref": "#/definitions/VMwareWorkItemSelection"
                }
            }
        },
        "Pool": {
            "type": "object",
            "properties": {
                "autoMediaVerify": {
                    "type": "boolean"
                },
                "barcodePrefix": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "createDltWorm": {
                    "type": "boolean"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "labelTemplate": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "maxParallelism": {
                    "type": "integer",
                    "format": "int32"
                },
                "maxVolumesToRecycle": {
                    "type": "integer",
                    "format": "int32"
                },
                "mediaTypeRequired": {
                    "description": "MediaTypeRequired",
                    "type": "string",
                    "enum": [
                        "Data Domain",
                        "DD Cloud Tier",
                        "protectpoint",
                        "objstr",
                        "Atmos COS",
                        "adv_file",
                        "Cloud Boost",
                        "file",
                        "logical",
                        "Auto Detected",
                        "LTO Ultrium-8",
                        "LTO Ultrium-7",
                        "LTO Ultrium-6",
                        "LTO Ultrium-5",
                        "LTO Ultrium-4",
                        "LTO Ultrium-3",
                        "LTO Ultrium-2",
                        "LTO Ultrium",
                        "LTO Accelis",
                        "TS1140",
                        "TS1130",
                        "TS1120",
                        "T10000D",
                        "T10000C",
                        "T10000B",
                        "T10000",
                        "9940B",
                        "9940",
                        "9840D",
                        "9840C",
                        "9840b",
                        "9840",
                        "9490",
                        "4890",
                        "3592",
                        "3590",
                        "3570",
                        "3480",
                        "optical",
                        "dtf2",
                        "dtf",
                        "dst",
                        "dst (NT)",
                        "VXA-320",
                        "VXA-172",
                        "VXA-2",
                        "VXA",
                        "sdlt600",
                        "sdlt320",
                        "sdlt",
                        "dlt-v4",
                        "dlt-s4",
                        "dlt 20GB",
                        "dlt vs160",
                        "dlt8000",
                        "dlt7000",
                        "dlt1",
                        "dlt",
                        "tzs20",
                        "tz90",
                        "tz89",
                        "tz88",
                        "tz87",
                        "tz86",
                        "tz85",
                        "tkz90",
                        "tk70",
                        "tk50",
                        "4mm DAT160",
                        "4mm DAT72",
                        "4mm 20GB",
                        "4mm 12GB",
                        "4mm 8GB",
                        "4mm 4GB",
                        "4mm",
                        "8mm Mammoth-3",
                        "8mm Mammoth-2",
                        "SAIT-2",
                        "SAIT-1",
                        "8mm AIT-5",
                        "8mm AIT-4",
                        "8mm AIT-3",
                        "8mm AIT-2",
                        "8mm AIT",
                        "8mm 20GB",
                        "8mm 7GB",
                        "8mm 5GB",
                        "8mm",
                        "SD3",
                        "SLR",
                        "qic",
                        "travan10",
                        "generic256",
                        "generic128",
                        "generic",
                        "CentricStor",
                        "vhs",
                        "himt"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "poolType": {
                    "description": "PoolType",
                    "type": "string",
                    "enum": [
                        "Backup",
                        "BackupClone",
                        "Archive",
                        "ArchiveClone"
                    ]
                },
                "recycleFromOtherPools": {
                    "type": "boolean"
                },
                "recycleInterval": {
                    "type": "string"
                },
                "recycleStart": {
                    "type": "string"
                },
                "recycleToOtherPools": {
                    "type": "boolean"
                },
                "resourceId": {
                    "$ref": "#/definitions/ResourceId"
                },
                "storeIndexEntries": {
                    "type": "boolean"
                },
                "tenant": {
                    "type": "string"
                },
                "volumeTypePreference": {
                    "description": "VolumeTypePreference",
                    "type": "string",
                    "enum": [
                        "Data Domain",
                        "DD Cloud Tier",
                        "protectpoint",
                        "objstr",
                        "Atmos COS",
                        "adv_file",
                        "Cloud Boost",
                        "file",
                        "logical",
                        "Auto Detected",
                        "LTO Ultrium-8",
                        "LTO Ultrium-7",
                        "LTO Ultrium-6",
                        "LTO Ultrium-5",
                        "LTO Ultrium-4",
                        "LTO Ultrium-3",
                        "LTO Ultrium-2",
                        "LTO Ultrium",
                        "LTO Accelis",
                        "TS1140",
                        "TS1130",
                        "TS1120",
                        "T10000D",
                        "T10000C",
                        "T10000B",
                        "T10000",
                        "9940B",
                        "9940",
                        "9840D",
                        "9840C",
                        "9840b",
                        "9840",
                        "9490",
                        "4890",
                        "3592",
                        "3590",
                        "3570",
                        "3480",
                        "optical",
                        "dtf2",
                        "dtf",
                        "dst",
                        "dst (NT)",
                        "VXA-320",
                        "VXA-172",
                        "VXA-2",
                        "VXA",
                        "sdlt600",
                        "sdlt320",
                        "sdlt",
                        "dlt-v4",
                        "dlt-s4",
                        "dlt 20GB",
                        "dlt vs160",
                        "dlt8000",
                        "dlt7000",
                        "dlt1",
                        "dlt",
                        "tzs20",
                        "tz90",
                        "tz89",
                        "tz88",
                        "tz87",
                        "tz86",
                        "tz85",
                        "tkz90",
                        "tk70",
                        "tk50",
                        "4mm DAT160",
                        "4mm DAT72",
                        "4mm 20GB",
                        "4mm 12GB",
                        "4mm 8GB",
                        "4mm 4GB",
                        "4mm",
                        "8mm Mammoth-3",
                        "8mm Mammoth-2",
                        "SAIT-2",
                        "SAIT-1",
                        "8mm AIT-5",
                        "8mm AIT-4",
                        "8mm AIT-3",
                        "8mm AIT-2",
                        "8mm AIT",
                        "8mm 20GB",
                        "8mm 7GB",
                        "8mm 5GB",
                        "8mm",
                        "SD3",
                        "SLR",
                        "qic",
                        "travan10",
                        "generic256",
                        "generic128",
                        "generic",
                        "CentricStor",
                        "vhs",
                        "himt"
                    ]
                },
                "wormPool": {
                    "type": "boolean"
                }
            }
        },
        "PoolList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "pools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Pool"
                    }
                }
            }
        },
        "Probe": {
            "type": "object",
            "properties": {
                "commandOptions": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "name": {
                    "type": "string"
                },
                "probeCommand": {
                    "type": "string"
                },
                "resourceId": {
                    "$ref": "#/definitions/ResourceId"
                }
            }
        },
        "ProbeList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "probes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Probe"
                    }
                }
            }
        },
        "Rule": {
            "type": "object",
            "properties": {
                "dataSourceType": {
                    "type": "string",
                    "enum": [
                        "VMware",
                        "MSSQL"
                    ]
                },
                "comment": {
                    "type": "string"
                },
                "definitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RuleItemDefinition"
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "name": {
                    "type": "string"
                },
                "matchType": {
                    "type": "string",
                    "enum": [
                        "All",
                        "Any"
                    ]
                },
                "resourceId": {
                    "$ref": "#/definitions/ResourceId"
                }
            }
        },
        "RuleItemDefinition": {
            "type": "object",
            "properties": {
                "operator": {
                    "type": "string",
                    "enum": [
                        "Equals",
                        "DoesNotEquals",
                        "Contains",
                        "DoesNotContains",
                        "StartsWith",
                        "DoesNotStartsWith",
                        "EndsWith",
                        "DoesNotEndsWith",
                        "RegExp"
                    ]
                },
                "property": {
                    "type": "string",
                    "enum": [
                        "Name",
                        "Path",
                        "Tag"
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "VirtualMachine",
                        "Cluster",
                        "vApp",
                        "VmFolder",
                        "Datacenter",
                        "ResourcePool",
                        "Database"
                    ]
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "RuleList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Rule"
                    }
                }
            }
        },
        "ProtectionGroup": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "name": {
                    "type": "string"
                },
                "resourceId": {
                    "$ref": "#/definitions/ResourceId"
                },
                "tenant": {
                    "type": "string"
                },
                "workItemQueries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "workItemSource": {
                    "description": "WorkItemSource",
                    "type": "string",
                    "enum": [
                        "Static",
                        "Dynamic"
                    ]
                },
                "workItemSubType": {
                    "description": "WorkItemSubType",
                    "type": "string",
                    "enum": [
                        "VirtualMachine",
                        "VMDK",
                        "All",
                        "None"
                    ]
                },
                "workItemType": {
                    "description": "WorkItemType",
                    "type": "string",
                    "enum": [
                        "Client",
                        "SaveSetId",
                        "VMware",
                        "NASDevice"
                    ]
                },
                "workItems": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vmwareWorkItemSelection": {
                    "$ref": "#/definitions/VMwareWorkItemSelection"
                },
                "vmwareWorkItemExclusion": {
                    "$ref": "#/definitions/VMwareWorkItemSelection"
                },
                "rule": {
                    "description": "Name of the rule",
                    "type": "string"
                },
                "backupOptimization": {
                    "description": "Backup Optimization",
                    "type": "string",
                    "enum": [
                        "Capacity",
                        "Performance"
                    ]
                },
                "dynamicAssociation": {
                    "type": "boolean"
                }
            }
        },
        "ProtectionGroupList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "protectionGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProtectionGroup"
                    }
                }
            }
        },
        "Recover": {
            "type": "object",
            "properties": {
                "recoveryType": {
                    "description": "Specifies the type of recovery.",
                    "type": "string",
                    "enum": [
                        "Filesystem",
                        "BBB",
                        "NDMP",
                        "VM File Level Recover"
                    ]
                },
                "recoveryDestination": {
                    "description": "Specifies the destination location to which the recovery is performed, as the directory pathname of the file system, NDMP backup, or block based backup.",
                    "type": "string"
                },
                "itemsToRecover": {
                    "description": "Specifies the list of items to be recovered. For a file system, NDMP backup, or block based backup, specifies the list of full file pathnames.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "destinationClientResID": {
                    "description": "Specifies the destination client ID of the remote machine to direct the recovery. The client ID can be obtained from URI /global/clients. If destination client ID is not provided, the client information from the backup instance is considered for recovery.",
                    "type": "string"
                },
                "backupInstance": {
                    "$ref": "#/definitions/RecoverBackupInstance"
                },
                "timeStampBasedGranularRecover": {
                    "$ref": "#/definitions/TimeStampBasedGranularRecover"
                },
                "actionForDuplicateItems": {
                    "description": "Specifies the action to perform during recovery of the files that are already present at the recovery location.",
                    "type": "string",
                    "enum": [
                        "Rename",
                        "Overwrite",
                        "Skip"
                    ]
                },
                "targetVolume": {
                    "description": "Specifies the target volume to use for the image level recovery of block based backups.",
                    "type": "string"
                },
                "poolForStaging": {
                    "description": "Specifies the pool for staging that is used for Client Direct disabled devices. Currently used for block based backups.",
                    "type": "string"
                },
                "passphrase": {
                    "description": "Specifies the additional passphrase to use for recovery of files that were backed up by using the AES directive.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "recoveryStartTime": {
                    "description": "Specifies the time when the recovery started on the NetWorker server. Not supported for an HTTP-POST request.",
                    "type": "string"
                },
                "namespace": {
                    "description": "Specifies the file index namespace from which to recover the files.",
                    "type": "string",
                    "enum": [
                        "backup",
                        "archive",
                        "bbb"
                    ]
                },
                "NDMPOptions": {
                    "$ref": "#/definitions/RecoverNDMPOptions"
                },
                "links": {
                    "description": "Specifies a link to the recovery job.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "resourceId": {
                    "$ref": "#/definitions/ResourceId"
                }
            }
        },
        "RecoverBackupInstance": {
            "description": "Specifies the backup instance ID and optional clone ID to identify the backup for recovery.",
            "type": "object",
            "properties": {
                "backupID": {
                    "description": "Specifies the instance backup ID, as either a long ID or short ID. For the HTTP-POST request, the instance backup ID can be retrieved from URI /global/backups.",
                    "type": "string"
                },
                "instanceID": {
                    "description": "Specifies the instance ID. For the HTTP-POST request, the instance ID can be retrieved from URI /global/backups.",
                    "type": "string"
                }
            }
        },
        "TimeStampBasedGranularRecover": {
            "description": "Specifies the source client resource ID and timestamp to identify the backup for recovery.",
            "type": "object",
            "properties": {
                "sourceClientResID": {
                    "description": "Specifies the resource ID to uniquely identify the source client.",
                    "type": "string"
                },
                "timeStamp": {
                    "description": "Specifies the backup savetime in the format yyyy-mm-ddThh:mm:ssXXX (2017-10-07T21:00:13+05:30) or in epoch time format (1507237222).",
                    "type": "string"
                }
            }
        },
        "RecoverNDMPOptions": {
            "description": "Supported for NDMP recovery only.",
            "type": "object",
            "properties": {
                "verifyIndexDB": {
                    "description": "Specifies to not verify the existence of files in the index database. By default, the files are verified in the index database prior to recovery.",
                    "type": "boolean"
                },
                "useIPv4": {
                    "description": "Specifies to use the IPv4 addresses for the NDMP data connection during recovery.",
                    "type": "boolean"
                }
            }
        },
        "RecoverList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "recovers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Recover"
                    }
                }
            }
        },
        "ResourceId": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "sequence": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ServerConfiguration": {
            "type": "object",
            "properties": {
                "acceptNewRecoverSessions": {
                    "type": "boolean"
                },
                "acceptNewSessions": {
                    "type": "boolean"
                },
                "aclPassthrough": {
                    "type": "boolean"
                },
                "administrators": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "authenticationProxyPort": {
                    "type": "integer",
                    "format": "int32"
                },
                "authenticationServiceDatabase": {
                    "type": "string"
                },
                "authenticationServicePort": {
                    "type": "integer",
                    "format": "int32"
                },
                "cityOrTown": {
                    "type": "string"
                },
                "clpLicenseServer": {
                    "type": "string"
                },
                "clpLicenseServerPort": {
                    "type": "integer",
                    "format": "int32"
                },
                "clpRefresh": {
                    "type": "string"
                },
                "clpSwid": {
                    "type": "string"
                },
                "clpUom": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "company": {
                    "type": "string"
                },
                "contactName": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "datazonePassPhrase": {
                    "type": "string"
                },
                "deviceSharingMode": {
                    "description": "DeviceSharingMode",
                    "type": "string",
                    "enum": [
                        "NoSharing",
                        "MaximalSharing",
                        "ServerDefault"
                    ]
                },
                "disableRpsClone": {
                    "type": "boolean"
                },
                "emailAddress": {
                    "type": "string"
                },
                "fax": {
                    "type": "string"
                },
                "jobInactivityTimeout": {
                    "type": "integer",
                    "format": "int32"
                },
                "jobsdbRetentionInHours": {
                    "type": "integer",
                    "format": "int32"
                },
                "keepIncompleteBackups": {
                    "type": "boolean"
                },
                "licenseServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "manualSaves": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "nasDevicePolicyAllowed": {
                    "type": "boolean"
                },
                "parallelism": {
                    "type": "integer",
                    "format": "int32"
                },
                "phone": {
                    "type": "string"
                },
                "productSerialNumber": {
                    "type": "string"
                },
                "publicArchives": {
                    "type": "boolean"
                },
                "purchaseDate": {
                    "type": "string"
                },
                "resourceId": {
                    "$ref": "#/definitions/ResourceId"
                },
                "saveSessionDistribution": {
                    "description": "SaveSessionDistribution",
                    "type": "string",
                    "enum": [
                        "MaxSessions",
                        "TargetSessions"
                    ]
                },
                "serverOSType": {
                    "type": "string"
                },
                "serverTimezone": {
                    "type": "string"
                },
                "siteId": {
                    "type": "string"
                },
                "solutionId": {
                    "type": "string"
                },
                "stateOrProvince": {
                    "type": "string"
                },
                "streetAddress": {
                    "type": "string"
                },
                "supportEmailAddress": {
                    "type": "string"
                },
                "vmwarePolicyAllowed": {
                    "type": "boolean"
                },
                "vmwsEnable": {
                    "type": "boolean"
                },
                "vmwsPort": {
                    "type": "integer",
                    "format": "int32"
                },
                "vmwsUserName": {
                    "type": "string"
                },
                "vmwsUserPassword": {
                    "type": "string"
                },
                "volumePriority": {
                    "description": "VolumePriority",
                    "type": "string",
                    "enum": [
                        "NearLinePriority",
                        "SmartMediaPriority"
                    ]
                },
                "wormPoolsOnlyHoldWormTapes": {
                    "type": "boolean"
                },
                "wormTapesOnlyInWormPools": {
                    "type": "boolean"
                },
                "zipOrPostalCode": {
                    "type": "string"
                }
            }
        },
        "ServerMessage": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ServerMessageList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "serverMessages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServerMessage"
                    }
                }
            }
        },
        "ServerStatistics": {
            "type": "object",
            "properties": {
                "badRecovers": {
                    "type": "integer",
                    "format": "int64"
                },
                "badSaves": {
                    "type": "integer",
                    "format": "int64"
                },
                "currentRecovers": {
                    "type": "integer",
                    "format": "int64"
                },
                "currentSaves": {
                    "type": "integer",
                    "format": "int64"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "maxRecovers": {
                    "type": "integer",
                    "format": "int64"
                },
                "maxSaves": {
                    "type": "integer",
                    "format": "int64"
                },
                "recoverSize": {
                    "$ref": "#/definitions/Size"
                },
                "recovers": {
                    "type": "integer",
                    "format": "int64"
                },
                "saveSize": {
                    "$ref": "#/definitions/Size"
                },
                "saves": {
                    "type": "integer",
                    "format": "int64"
                },
                "upSince": {
                    "type": "string",
                    "format": "date-time"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "Session": {
            "type": "object",
            "properties": {
                "clientHostname": {
                    "type": "string"
                },
                "completed": {
                    "type": "boolean"
                },
                "compressionRatio": {
                    "type": "number",
                    "format": "int64"
                },
                "device": {
                    "type": "string"
                },
                "deviceFamily": {
                    "description": "DeviceFamily",
                    "type": "string",
                    "enum": [
                        "Tape",
                        "Disk",
                        "Cloud",
                        "Logical"
                    ]
                },
                "deviceType": {
                    "description": "DeviceType",
                    "type": "string",
                    "enum": [
                        "Data Domain",
                        "DD Cloud Tier",
                        "protectpoint",
                        "objstr",
                        "Atmos COS",
                        "adv_file",
                        "Cloud Boost",
                        "file",
                        "logical",
                        "Auto Detected",
                        "LTO Ultrium-8",
                        "LTO Ultrium-7",
                        "LTO Ultrium-6",
                        "LTO Ultrium-5",
                        "LTO Ultrium-4",
                        "LTO Ultrium-3",
                        "LTO Ultrium-2",
                        "LTO Ultrium",
                        "LTO Accelis",
                        "TS1140",
                        "TS1130",
                        "TS1120",
                        "T10000D",
                        "T10000C",
                        "T10000B",
                        "T10000",
                        "9940B",
                        "9940",
                        "9840D",
                        "9840C",
                        "9840b",
                        "9840",
                        "9490",
                        "4890",
                        "3592",
                        "3590",
                        "3570",
                        "3480",
                        "optical",
                        "dtf2",
                        "dtf",
                        "dst",
                        "dst (NT)",
                        "VXA-320",
                        "VXA-172",
                        "VXA-2",
                        "VXA",
                        "sdlt600",
                        "sdlt320",
                        "sdlt",
                        "dlt-v4",
                        "dlt-s4",
                        "dlt 20GB",
                        "dlt vs160",
                        "dlt8000",
                        "dlt7000",
                        "dlt1",
                        "dlt",
                        "tzs20",
                        "tz90",
                        "tz89",
                        "tz88",
                        "tz87",
                        "tz86",
                        "tz85",
                        "tkz90",
                        "tk70",
                        "tk50",
                        "4mm DAT160",
                        "4mm DAT72",
                        "4mm 20GB",
                        "4mm 12GB",
                        "4mm 8GB",
                        "4mm 4GB",
                        "4mm",
                        "8mm Mammoth-3",
                        "8mm Mammoth-2",
                        "SAIT-2",
                        "SAIT-1",
                        "8mm AIT-5",
                        "8mm AIT-4",
                        "8mm AIT-3",
                        "8mm AIT-2",
                        "8mm AIT",
                        "8mm 20GB",
                        "8mm 7GB",
                        "8mm 5GB",
                        "8mm",
                        "SD3",
                        "SLR",
                        "qic",
                        "travan10",
                        "generic256",
                        "generic128",
                        "generic",
                        "CentricStor",
                        "vhs",
                        "himt"
                    ]
                },
                "endTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "extendedInformation": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "itemIdLong": {
                    "type": "integer",
                    "format": "int64"
                },
                "jobId": {
                    "type": "integer",
                    "format": "int64"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "mode": {
                    "description": "Mode",
                    "type": "string",
                    "enum": [
                        "Unknown",
                        "Saving",
                        "Recovering",
                        "Browsing"
                    ]
                },
                "pool": {
                    "type": "string"
                },
                "protectionGroup": {
                    "type": "string"
                },
                "rootJobId": {
                    "type": "integer",
                    "format": "int64"
                },
                "saveSet": {
                    "type": "string"
                },
                "saveSetId": {
                    "type": "string"
                },
                "size": {
                    "$ref": "#/definitions/Size"
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "stopped": {
                    "type": "boolean"
                },
                "tenant": {
                    "type": "string"
                },
                "totalRecoverSize": {
                    "$ref": "#/definitions/Size"
                },
                "totalRecoverVolumesNeeded": {
                    "type": "integer",
                    "format": "int64"
                },
                "transferRate": {
                    "$ref": "#/definitions/BitRate"
                },
                "volume": {
                    "type": "string"
                }
            }
        },
        "SessionList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Session"
                    }
                }
            }
        },
        "Size": {
            "type": "object",
            "properties": {
                "unit": {
                    "description": "Unit",
                    "type": "string",
                    "enum": [
                        "Byte",
                        "KB"
                    ]
                },
                "value": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "StorageNode": {
            "type": "object",
            "properties": {
                "aftdAllowedDirectories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cloneStorageNodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "comment": {
                    "type": "string"
                },
                "configuredDevices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "configuredLibraries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "configuredLibraryTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "configuredSilos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "configuredSiloTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "daemonVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dateOfLastScan": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateOfRegistration": {
                    "type": "string",
                    "format": "date-time"
                },
                "dedicatedStorageNode": {
                    "type": "boolean"
                },
                "deviceSharingMode": {
                    "description": "DeviceSharingMode",
                    "type": "string",
                    "enum": [
                        "NoSharing",
                        "MaximalSharing",
                        "ServerDefault"
                    ]
                },
                "dynamicNsrmmds": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "lastErrorMessages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lastErrorNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "maxActiveDevices": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "numberOfDevices": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfLibraries": {
                    "type": "integer",
                    "format": "int32"
                },
                "password": {
                    "type": "string"
                },
                "ready": {
                    "type": "boolean"
                },
                "remoteUser": {
                    "type": "string"
                },
                "resourceId": {
                    "$ref": "#/definitions/ResourceId"
                },
                "searchAllLuns": {
                    "type": "boolean"
                },
                "sharedDeviceCreation": {
                    "type": "boolean"
                },
                "skipScsiTargets": {
                    "type": "boolean"
                },
                "storageNodeIsConfigured": {
                    "type": "boolean"
                },
                "tenant": {
                    "type": "string"
                },
                "typeOfStorageNode": {
                    "description": "TypeOfStorageNode",
                    "type": "string",
                    "enum": [
                        "SCSI",
                        "NDMP",
                        "SILO"
                    ]
                },
                "usePersistentNames": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "StorageNodeList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "storageNodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StorageNode"
                    }
                }
            }
        },
        "Tenant": {
            "type": "object",
            "properties": {
                "clientHostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "comment": {
                    "type": "string"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "directives": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "externalRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "jukeboxes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "name": {
                    "type": "string"
                },
                "numberOfClients": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfDevices": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfJukeboxes": {
                    "type": "integer",
                    "format": "int32"
                },
                "numberOfStorageNodes": {
                    "type": "integer",
                    "format": "int32"
                },
                "pools": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "privileges": {
                    "type": "array",
                    "items": {
                        "description": "Privilege",
                        "type": "string",
                        "enum": [
                            "ChangeSecuriitySettings",
                            "ViewSecuritySettings",
                            "CreateSecuritySettings",
                            "DeleteSecuritySettings",
                            "CreateApplicationSettings",
                            "ViewApplicationSettings",
                            "ChangeApplicationSettings",
                            "DeleteApplicationSettings",
                            "RemoteAccessAllClients",
                            "ConfigureNetWorker",
                            "OperateNetWorker",
                            "MonitorNetWorker",
                            "OperateDevicesAndJukeboxes",
                            "RecoverLocalData",
                            "RecoverRemoteData",
                            "BackupLocalData",
                            "BackupRemoteData",
                            "ArchiveData"
                        ]
                    }
                },
                "protectionGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "protectionPolicies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "recovers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resourceId": {
                    "$ref": "#/definitions/ResourceId"
                },
                "storageNodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "TenantList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "tenants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tenant"
                    }
                }
            }
        },
        "UserGroup": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "externalRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "name": {
                    "type": "string"
                },
                "privileges": {
                    "type": "array",
                    "items": {
                        "description": "Privilege",
                        "type": "string",
                        "enum": [
                            "ChangeSecuriitySettings",
                            "ViewSecuritySettings",
                            "CreateSecuritySettings",
                            "DeleteSecuritySettings",
                            "CreateApplicationSettings",
                            "ViewApplicationSettings",
                            "ChangeApplicationSettings",
                            "DeleteApplicationSettings",
                            "RemoteAccessAllClients",
                            "ConfigureNetWorker",
                            "OperateNetWorker",
                            "MonitorNetWorker",
                            "OperateDevicesAndJukeboxes",
                            "RecoverLocalData",
                            "RecoverRemoteData",
                            "BackupLocalData",
                            "BackupRemoteData",
                            "ArchiveData"
                        ]
                    }
                },
                "resourceId": {
                    "$ref": "#/definitions/ResourceId"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "UserGroupList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "userGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserGroup"
                    }
                }
            }
        },
        "Volume": {
            "type": "object",
            "properties": {
                "accessTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "availabilityFlags": {
                    "description": "Availability Flags",
                    "type": "array",
                    "items": {
                        "description": "Availability Flag",
                        "type": "string",
                        "enum": [
                            "Nearline",
                            "Openvault",
                            "Cloud"
                        ]
                    }
                },
                "barcode": {
                    "type": "string"
                },
                "capacity": {
                    "$ref": "#/definitions/Size"
                },
                "expirationTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "family": {
                    "type": "string"
                },
                "flags": {
                    "description": "Flags",
                    "type": "array",
                    "items": {
                        "description": "Flag",
                        "type": "string",
                        "enum": [
                            "Dirty",
                            "ReadOnly",
                            "ScanNeeded"
                        ]
                    }
                },
                "id": {
                    "type": "string"
                },
                "latestLabelTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "location": {
                    "type": "string"
                },
                "mounts": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "originalLabelTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "pool": {
                    "type": "string"
                },
                "recover": {
                    "$ref": "#/definitions/Size"
                },
                "recycled": {
                    "type": "integer",
                    "format": "int64"
                },
                "saveSetExpirationTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "saveSetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "states": {
                    "type": "array",
                    "items": {
                        "description": "State",
                        "type": "string",
                        "enum": [
                            "Archive",
                            "ManualRecycle",
                            "Recyclable",
                            "WORM"
                        ]
                    }
                },
                "tenant": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "written": {
                    "$ref": "#/definitions/Size"
                }
            }
        },
        "VolumeList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Volume"
                    }
                }
            }
        },
        "VCenter": {
            "type": "object",
            "properties": {
                "cloudDeployment": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "resourceId": {
                    "$ref": "#/definitions/ResourceId"
                },
                "userName": {
                    "type": "string"
                },
                "userPassword": {
                    "type": "string"
                }
            }
        },
        "VCenterList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "vCenters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VCenter"
                    }
                }
            }
        },
        "VMwareVm": {
            "type": "object",
            "properties": {
                "annotation": {
                    "type": "string"
                },
                "connectionState": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string"
                },
                "ipAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "morefId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "osId": {
                    "type": "string"
                },
                "osName": {
                    "type": "string"
                },
                "powerState": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "vCenterHostname": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "VMwareProtectedVm": {
            "type": "object",
            "properties": {
                "hasAppConsistencyBackup": {
                    "type": "boolean"
                },
                "hostname": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "morefId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "osId": {
                    "type": "string"
                },
                "osName": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "vCenterHostname": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "VMwareVmBackupInfo": {
            "type": "object",
            "properties": {
                "datastoreMoref": {
                    "type": "string"
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VMwareVmdkBackupInfo"
                    }
                },
                "hostMoref": {
                    "type": "string"
                },
                "morefPath": {
                    "type": "string"
                },
                "vCenterHostname": {
                    "type": "string"
                },
                "vmMoref": {
                    "type": "string"
                },
                "vmName": {
                    "type": "string"
                }
            }
        },
        "VMwareVmdkBackupInfo": {
            "type": "object",
            "properties": {
                "datastoreMoref": {
                    "type": "string"
                },
                "datastoreName": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sizeInKb": {
                    "type": "integer"
                },
                "thinProvisioned": {
                    "type": "boolean"
                }
            }
        },
        "VMwareVmdkRecoverInfo": {
            "type": "object",
            "properties": {
                "datastoreMoref": {
                    "type": "string",
                    "description": "Required. The destination datastore for this disk."
                },
                "key": {
                    "type": "string",
                    "description": "Required. The key of the disk, can be retrieved from the vmInformation property of a backup."
                },
                "name": {
                    "type": "string",
                    "description": "Mandatory. Specifies the name of the disk, which can be retrieved from the vmInformation property of a backup."
                }
            }
        },
        "VMwareVmEmergencyRecoverCleanupOptions": {
            "description": "Mandatory when recoverMode is set to Emergency. Not supported otherwise. Specifies the options for cleaning up ESX, proxy, and client resources at the end of the emergency recovery.",
            "type": "object",
            "properties": {
                "deleteEsxClient": {
                    "description": "Specifies whether the ESX client must be deleted at the end of emergency recovery.",
                    "type": "boolean"
                },
                "deleteEsxHypervisor": {
                    "description": "Specifies whether the ESX hypervisor resource must be deleted at the end of emergency recovery.",
                    "type": "boolean"
                },
                "deleteVproxy": {
                    "description": "Specifies whether the vProxy resource must be deleted at the end of emergency recovery.",
                    "type": "boolean"
                },
                "vCenterHostnameForVproxy": {
                    "description": "Specifies the vCenter to which the vProxy must be associated to at the end of emergency recovery. Used only if the deleteVproxy option is unset or set to false.",
                    "type": "string"
                }
            }
        },
        "VMwareVmFlrOptions": {
            "description": "Mandatory when recoverMode is set to FLR. Not supported otherwise. Specifies the target guest VM where the application recovery will be performed.",
            "type": "object",
            "properties": {
                "recoveryDestination": {
                    "description": "Specifies the destination on the target VM to which the recovered files will be copied.",
                    "type": "string"
                },
                "elevateUser": {
                    "description": "Specifies whether the recover has to be performed with elevated(administrator) authority.",
                    "type": "string"
                },
                "itemsToRecover": {
                    "description": "Specifies the list of items to be recovered.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "terminateMountSession": {
                    "description": "Specifies whether the mount session should be terminated at the end of recovery.",
                    "type": "boolean"
                },
                "overwrite": {
                    "description": "Specifies whether the files should be forcefully overwritten if they are present in the destination directory.",
                    "type": "boolean"
                }
            }
        },
        "VMwareVmGuestInfo": {
            "description": "Mandatory when recoverMode is set to Application. Not supported otherwise. Specifies the target guest VM where the application recovery will be performed.",
            "type": "object",
            "properties": {
                "installAppAgent": {
                    "type": "boolean"
                },
                "targetVmAdminUserId": {
                    "type": "string"
                },
                "targetVmAdminUserPassword": {
                    "type": "string"
                },
                "targetVmUserId": {
                    "type": "string"
                },
                "targetVmUserPassword": {
                    "type": "string"
                },
                "uninstallAppAgent": {
                    "type": "boolean"
                }
            }
        },
        "VMwareApplicationRecoverSavesetInfo": {
            "type": "object",
            "properties": {
                "applicationData": {
                    "type": "string"
                },
                "backupId": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                }
            }
        },
        "VMwareVmdkWorkItem": {
            "type": "object",
            "properties": {
                "vmUuid": {
                    "type": "string"
                },
                "vmdkUuid": {
                    "type": "string"
                }
            }
        },
        "VMwareVmList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "vms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VMwareVm"
                    }
                }
            }
        },
        "VMwareProtectedVmList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "vms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VMwareProtectedVm"
                    }
                }
            }
        },
        "VMwareVmOpBackup": {
            "type": "object",
            "properties": {
                "policy": {
                    "type": "string"
                },
                "workflow": {
                    "type": "string"
                }
            }
        },
        "VMwareVmOpRecover": {
            "type": "object",
            "properties": {
                "applicationData": {
                    "type": "string",
                    "description": "Optional when recoverMode is set to Application. Not supported otherwise. Specifies the JSON data to be passed to application agent for restore."
                },
                "applicationName": {
                    "type": "string",
                    "description": "Mandatory when recoverMode is set to Application. Not supported otherwise. Specifies the application name to be restored."
                },
                "applicationRestoreSavesets": {
                    "type": "array",
                    "description": "Optional when recoverMode is set to Application. Not supported otherwise. Speicifies the list of savesets to be restored in sequence.",
                    "items": {
                        "$ref": "#/definitions/VMwareApplicationRecoverSavesetInfo"
                    }
                },
                "clusterComputeResourceMoref": {
                    "type": "string",
                    "description": "Optional when recoverMode is set to New or Instant. Not supported otherwise. Either clusterComputeResourceMoref or computeResourceMoref needs to be set to specify which host or cluster under which the VM will be restored."
                },
                "computeResourceMoref": {
                    "type": "string",
                    "description": "Optional when recoverMode is set to New or Instant. Not supported otherwise. Either clusterComputeResourceMoref or computeResourceMoref needs to be set to specify which host or cluster under which the VM will be restored."
                },
                "datacenterMoref": {
                    "type": "string",
                    "description": "Mandatory when recoverMode is set to New or Instant. Not supported otherwise. Specifies to which datacenter the VM is restored."
                },
                "datastoreMoref": {
                    "type": "string",
                    "description": "Mandatory when recoverMode is set to New or Emergency. Not supported otherwise. Specifies to which datastore VM files are restored."
                },
                "debugLevel": {
                    "type": "integer",
                    "description": "Specifies the debug level to be used during resore."
                },
                "deleteExistingBackingFile": {
                    "type": "boolean",
                    "description": "Mandatory when recoverMode is set to Revert and also when the configuration recovery is also set. Not supported otherwise. Specifies whether the existing disk will be deleted in case of disk configuration mismatch."
                },
                "disks": {
                    "type": "array",
                    "description": "Mandatory when recoverMode is set to New or Disk or Emergency. Optional when recover mode is set to Revert. Not supported otherwise. Speicifies which disks will be restored and to which datastore. If not set and recoverMode is set to Revert, then all disks will be reverted.",
                    "items": {
                        "$ref": "#/definitions/VMwareVmdkRecoverInfo"
                    }
                },
                "hostMoref": {
                    "type": "string",
                    "description": "Optional when recoverMode is set to New or Instant. Not supported otherwise. Specifies which host the VM is restored to. Not required when restoring to a DRS-enabled clusters."
                },
                "jobName": {
                    "type": "string",
                    "description": "Optional for all recoverMode values. Specifies the name of the job that will be created."
                },
                "mountJobId": {
                    "type": "string",
                    "description": "Mandatory when recoverMode is set to Application. Not supported otherwise. Specifies the mount job ID to be used by the restore session."
                },
                "powerOn": {
                    "type": "boolean",
                    "description": "Mandatory when recoverMode is set to Revert, Instant, New, Disk or Emergency. Not supported otherwise. Specifies whether to power on the VM at the end of the restore."
                },
                "reconnectNic": {
                    "type": "boolean",
                    "description": "Mandatory when recoverMode is set to Revert, Instant, New, Disk or Emergency. Not supported otherwise. Specifies whether to reconnect the NIC of the VM at the end of the restore."
                },
                "recoverMode": {
                    "type": "string",
                    "description": "Required. Specifies the type of the restore.",
                    "enum": [
                        "Revert",
                        "Instant",
                        "New",
                        "Disk",
                        "Application",
                        "FLR",
                        "Emergency"
                    ]
                },
                "resourcePoolMoref": {
                    "type": "string",
                    "description": "Optional when recoverMode is set to New or Instant. Not supported otherwise. Specifies the resource pool to which the VM will be restored."
                },
                "revertConfiguration": {
                    "type": "boolean",
                    "description": "Mandatory when recoverMode is set to Revert. Not supported otherwise. Specifies whether to revert the VM configuration."
                },
                "stagingPool": {
                    "type": "string",
                    "description": "Optional for all recoverMode values. Specifies which staging pool to use on the DD device when restoring from a clone."
                },
                "vCenterHostname": {
                    "type": "string",
                    "description": "Mandatory when recoverMode is set to New, Instant, Disk or Emergency. Not supported otherwise. Specifies to which vCenter/ESX the VM or disk is restored."
                },
                "vmEmergencyRecoverCleanupOptions": {
                    "$ref": "#/definitions/VMwareVmEmergencyRecoverCleanupOptions"
                },
                "vmFolderMoref": {
                    "type": "string",
                    "description": "Required when recoverMode is set to New. Not supported otherwise. Specifies the VM folder under which the VM will be recovered."
                },
                "vmGuestLogin": {
                    "$ref": "#/definitions/VMwareVmGuestInfo"
                },
                "vmMoref": {
                    "type": "string",
                    "description": "Mandatory when recoverMode is set to Disk or Application. Not supported otherwise. Specifies to which VM the restored disk will be attached."
                },
                "vmName": {
                    "type": "string",
                    "description": "Mandatory when recoverMode is set to New, Instant, Disk, Application or Emergency. Not supported otherwise. Specifies either the restored VM name or, when recoverMode is Disk or Application, the existing VM name to which the restored disk will be attached."
                },
                "vmwareVmFlrOptions": {
                    "$ref": "#/definitions/VMwareVmFlrOptions"
                },
                "vProxyHostname": {
                    "type": "string",
                    "description": "Mandatory when recoverMode is set to Emergency. Optional when recoverMode is set to Revert, New, Instant, Disk, or Application. Not supported otherwise. Specifies the vProxy to be used for recovery."
                }
            }
        },
        "VMwareVmProtectionDetail": {
            "type": "object",
            "properties": {
                "protectionGroup": {
                    "$ref": "#/definitions/ProtectionGroup"
                },
                "protectionPolicy": {
                    "$ref": "#/definitions/Policy"
                },
                "workflow": {
                    "$ref": "#/definitions/PolicyWorkflow"
                }
            }
        },
        "VMwareVmProtectionDetailList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "protectionDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VMwareVmProtectionDetail"
                    }
                }
            }
        },
        "VMwareWorkItemOpUpdate": {
            "type": "object",
            "properties": {
                "addWorkItems": {
                    "$ref": "#/definitions/VMwareWorkItemSelection"
                },
                "deleteWorkItems": {
                    "$ref": "#/definitions/VMwareWorkItemSelection"
                }
            }
        },
        "VMwareWorkItemSelection": {
            "type": "object",
            "properties": {
                "vCenterHostname": {
                    "type": "string"
                },
                "containerMorefs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vmUuids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vmdks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VMwareVmdkWorkItem"
                    }
                }
            }
        },
        "VProxy": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "datastores": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "encryptNbdSessions": {
                    "type": "boolean"
                },
                "forceRegister": {
                    "type": "boolean"
                },
                "hostname": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "maxHotaddDisks": {
                    "type": "integer"
                },
                "maxHotaddSessions": {
                    "type": "integer"
                },
                "maxNbdSessions": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "resourceId": {
                    "$ref": "#/definitions/ResourceId"
                },
                "userName": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "vCenterHostname": {
                    "type": "string"
                },
                "vProxyPort": {
                    "type": "integer"
                }
            }
        },
        "VProxyList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "vProxies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VProxy"
                    }
                }
            }
        },
        "XmlVmBrowseDirectoryContents": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/XmlError"
                },
                "noMoreData": {
                    "description": "Specifies whether additional data exists. The value true indicates that no additional data is available.",
                    "type": "boolean"
                },
                "totalObjects": {
                    "description": "The total number of objects that can be retrieved by using the GET contents action.",
                    "type": "integer"
                },
                "freeSpace": {
                    "description": "Available free space in the current working directory.",
                    "type": "integer"
                },
                "fileList": {
                    "type": "array",
                    "description": "An array of objects which contain information about file system entries contained in the current working directory.",
                    "items": {
                        "$ref": "#/definitions/XmlFile"
                    }
                }
            }
        },
        "XmlError": {
            "description": "Specifies the error object.",
            "type": "object",
            "properties": {
                "text": {
                    "description": "Error message that appeared while retrieving the content of the session.",
                    "type": "string"
                },
                "code": {
                    "description": "Error code that appeared while retrieving the content of the session.",
                    "type": "integer"
                }
            }
        },
        "XmlFile": {
            "type": "object",
            "properties": {
                "fileName": {
                    "description": "Name of the file.",
                    "type": "string"
                },
                "fileType": {
                    "description": "File type value that can be file, directory, or symlink.",
                    "type": "string"
                },
                "fileSize": {
                    "description": "Size of the file in bytes.",
                    "type": "integer"
                },
                "fileModificationTime": {
                    "description": "Time when the file was last modified.",
                    "type": "string"
                }
            }
        },
        "VProxyVmBrowseSessionRequest": {
            "type": "object",
            "properties": {
                "currentWorkingDirectory": {
                    "description": "Specifies the path relative to the mount point or absolute path within the mounted backup location.",
                    "type": "string"
                },
                "idleTimeout": {
                    "description": "Idle timeout in seconds for the browse session.",
                    "type": "integer"
                },
                "cacheRetentionSeconds": {
                    "description": "The time in seconds after which cached contents of the currentWorkingDirectory will be considered stale.",
                    "type": "integer"
                },
                "browseDestination": {
                    "description": "Specifies whether the destination VM should be browsed, the default value is false.",
                    "type": "boolean"
                },
                "osType": {
                    "description": "Specifies the destination VM OS type.",
                    "type": "string",
                    "enum": [
                        "Windows",
                        "Linux"
                    ]
                },
                "elevateUser": {
                    "description": "Specifies whether the browse has to be performed with elevated(administrator) authority.",
                    "type": "boolean"
                }
            }
        },
        "VProxyVmBrowseSessionResponse": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/VProxyVmBrowseSessionResponseConfig"
                },
                "status": {
                    "$ref": "#/definitions/VProxyVmBrowseSessionResponseStatus"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                }
            }
        },
        "VProxyVmBrowseSessionPutOrPostResponse": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/VProxyVmBrowseSessionResponseConfig"
                },
                "status": {
                    "$ref": "#/definitions/VProxyVmBrowseSessionResponseStatus"
                }
            }
        },
        "VProxyVmBrowseSessionResponseConfig": {
            "type": "object",
            "properties": {
                "sessionId": {
                    "description": "Browse session identifier.",
                    "type": "string"
                },
                "currentWorkingDirectory": {
                    "description": "Specifies the path relative to the mount point or absolute path within the mounted backup location.",
                    "type": "string"
                },
                "idleTimeout": {
                    "description": "Idle timeout in seconds for the browse session.",
                    "type": "integer"
                },
                "cacheRetentionSeconds": {
                    "description": "The time in seconds after which cached contents of the currentWorkingDirectory will be considered stale.",
                    "type": "integer"
                },
                "browseDestination": {
                    "description": "Specifies whether the destination VM should be browsed.",
                    "type": "boolean"
                }
            }
        },
        "VProxyVmBrowseSessionResponseStatus": {
            "type": "object",
            "properties": {
                "state": {
                    "description": "Status of browse session whose value shall be Queued, Running, Success, Failure, or Cancelled.",
                    "type": "string"
                },
                "description": {
                    "description": "Status description of browse session.",
                    "type": "string"
                }
            }
        },
        "VProxyVmBrowseSessionResponseList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VProxyVmBrowseSessionResponse"
                    }
                }
            }
        },
        "VProxyVmMountSessionResponse": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/VProxyVmMountSessionResponseConfig"
                },
                "status": {
                    "$ref": "#/definitions/VProxyVmMountSessionResponseStatus"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                }
            }
        },
        "VProxyVmMountSessionResponseConfig": {
            "type": "object",
            "properties": {
                "mountPointPath": {
                    "description": "Mount point path of the mounted session.",
                    "type": "string"
                },
                "idleTimeout": {
                    "description": "Idle timeout of the mounted session.",
                    "type": "integer"
                }
            }
        },
        "VProxyVmMountSessionResponseStatus": {
            "type": "object",
            "properties": {
                "state": {
                    "description": "Status of mounted session.",
                    "type": "string"
                },
                "description": {
                    "description": "Status description of mounted session.",
                    "type": "string"
                }
            }
        }
    }
}